define(['dart_sdk', 'packages/flutter/src/material/date.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/semantics/semantics_service.dart', 'packages/flutter/src/services/haptic_feedback.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/rendering/paragraph.dart', 'packages/flutter/src/widgets/icon.dart', 'packages/flutter/src/material/icons.dart', 'packages/flutter/src/widgets/page_view.dart', 'packages/flutter/src/services/keyboard_key.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/foundation/key.dart', 'packages/flutter/src/widgets/spacer.dart', 'packages/flutter/src/widgets/icon_data.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/widgets/scroll_view.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/rendering/sliver_grid.dart', 'packages/flutter/src/rendering/sliver.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/painting/border_radius.dart'], (function load__packages__flutter__src__material__calendar_date_picker_dart(dart_sdk, packages__flutter__src__material__date$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__semantics__semantics_service$46dart, packages__flutter__src__services__haptic_feedback$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__rendering__paragraph$46dart, packages__flutter__src__widgets__icon$46dart, packages__flutter__src__material__icons$46dart, packages__flutter__src__widgets__page_view$46dart, packages__flutter__src__services__keyboard_key$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__foundation__key$46dart, packages__flutter__src__widgets__spacer$46dart, packages__flutter__src__widgets__icon_data$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__widgets__scroll_view$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__rendering__sliver_grid$46dart, packages__flutter__src__rendering__sliver$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__painting__border_radius$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const _interceptors = dart_sdk._interceptors;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const date$ = packages__flutter__src__material__date$46dart.src__material__date;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const debug = packages__flutter__src__widgets__widget_span$46dart.src__widgets__debug;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const shortcuts = packages__flutter__src__widgets__widget_span$46dart.src__widgets__shortcuts;
  const focus_traversal = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_traversal;
  const actions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__actions;
  const focus_manager = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_manager;
  const binding = packages__flutter__src__widgets__widget_span$46dart.src__widgets__binding;
  const scroll_physics = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_physics;
  const sliver = packages__flutter__src__widgets__widget_span$46dart.src__widgets__sliver;
  const scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_controller;
  const debug$ = packages__flutter__src__material__icon_button$46dart.src__material__debug;
  const material_localizations = packages__flutter__src__material__icon_button$46dart.src__material__material_localizations;
  const theme = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const ink_well = packages__flutter__src__material__icon_button$46dart.src__material__ink_well;
  const icon_button = packages__flutter__src__material__icon_button$46dart.src__material__icon_button;
  const divider = packages__flutter__src__material__icon_button$46dart.src__material__divider;
  const semantics_service = packages__flutter__src__semantics__semantics_service$46dart.src__semantics__semantics_service;
  const haptic_feedback = packages__flutter__src__services__haptic_feedback$46dart.src__services__haptic_feedback;
  const platform = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const paragraph = packages__flutter__src__rendering__paragraph$46dart.src__rendering__paragraph;
  const icon = packages__flutter__src__widgets__icon$46dart.src__widgets__icon;
  const icons = packages__flutter__src__material__icons$46dart.src__material__icons;
  const page_view = packages__flutter__src__widgets__page_view$46dart.src__widgets__page_view;
  const keyboard_key = packages__flutter__src__services__keyboard_key$46dart.src__services__keyboard_key;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const spacer = packages__flutter__src__widgets__spacer$46dart.src__widgets__spacer;
  const icon_data = packages__flutter__src__widgets__icon_data$46dart.src__widgets__icon_data;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const scroll_view = packages__flutter__src__widgets__scroll_view$46dart.src__widgets__scroll_view;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const sliver_grid = packages__flutter__src__rendering__sliver_grid$46dart.src__rendering__sliver_grid;
  const sliver$ = packages__flutter__src__rendering__sliver$46dart.src__rendering__sliver;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  var calendar_date_picker = Object.create(dart.library);
  var $add = dartx.add;
  var $_get = dartx._get;
  var $modulo = dartx['%'];
  var $truncate = dartx.truncate;
  var $toString = dartx.toString;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    StateOfStatefulWidget: () => (T.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T.StateOfStatefulWidget())))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    LinkedMapOfLogicalKeySet$Intent: () => (T.LinkedMapOfLogicalKeySet$Intent = dart.constFn(_js_helper.LinkedMap$(shortcuts.LogicalKeySet, actions.Intent)))(),
    CallbackActionOfNextFocusIntent: () => (T.CallbackActionOfNextFocusIntent = dart.constFn(actions.CallbackAction$(focus_traversal.NextFocusIntent)))(),
    CallbackActionOfPreviousFocusIntent: () => (T.CallbackActionOfPreviousFocusIntent = dart.constFn(actions.CallbackAction$(focus_traversal.PreviousFocusIntent)))(),
    CallbackActionOfDirectionalFocusIntent: () => (T.CallbackActionOfDirectionalFocusIntent = dart.constFn(actions.CallbackAction$(focus_traversal.DirectionalFocusIntent)))(),
    ActionOfIntent: () => (T.ActionOfIntent = dart.constFn(actions.Action$(actions.Intent)))(),
    LinkedMapOfType$ActionOfIntent: () => (T.LinkedMapOfType$ActionOfIntent = dart.constFn(_js_helper.LinkedMap$(core.Type, T.ActionOfIntent())))(),
    DurationTovoid: () => (T.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    ValueKeyOfDateTime: () => (T.ValueKeyOfDateTime = dart.constFn(key.ValueKey$(core.DateTime)))(),
    TraversalDirectionL: () => (T.TraversalDirectionL = dart.constFn(dart.legacy(focus_traversal.TraversalDirection)))(),
    intL: () => (T.intL = dart.constFn(dart.legacy(core.int)))(),
    ListOfFocusNode: () => (T.ListOfFocusNode = dart.constFn(core.List$(focus_manager.FocusNode)))(),
    intToFocusNode: () => (T.intToFocusNode = dart.constFn(dart.fnType(focus_manager.FocusNode, [core.int])))(),
    ValueKeyOfint: () => (T.ValueKeyOfint = dart.constFn(key.ValueKey$(core.int)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: date$.DatePickerMode.prototype,
        [_name]: "DatePickerMode.day",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.android",
        index: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.fuchsia",
        index: 1
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.linux",
        index: 3
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.windows",
        index: 5
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.macOS",
        index: 4
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 267,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialMonth",
        [_Location_column]: 11,
        [_Location_line]: 268,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "currentDate",
        [_Location_column]: 11,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "firstDate",
        [_Location_column]: 11,
        [_Location_line]: 270,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "lastDate",
        [_Location_column]: 11,
        [_Location_line]: 271,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectedDate",
        [_Location_column]: 11,
        [_Location_line]: 272,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onChanged",
        [_Location_column]: 11,
        [_Location_line]: 273,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDisplayedMonthChanged",
        [_Location_column]: 11,
        [_Location_line]: 274,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectableDayPredicate",
        [_Location_column]: 11,
        [_Location_line]: 275,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.constList([C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17], T._LocationL());
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[8] || CT.C8,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 266,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 52,
        [EdgeInsets_left]: 0
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 281,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "currentDate",
        [_Location_column]: 13,
        [_Location_line]: 282,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "firstDate",
        [_Location_column]: 13,
        [_Location_line]: 283,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "lastDate",
        [_Location_column]: 13,
        [_Location_line]: 284,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialDate",
        [_Location_column]: 13,
        [_Location_line]: 285,
        [_Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectedDate",
        [_Location_column]: 13,
        [_Location_line]: 286,
        [_Location_file]: null
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onChanged",
        [_Location_column]: 13,
        [_Location_line]: 287,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.constList([C[21] || CT.C21, C[22] || CT.C22, C[23] || CT.C23, C[24] || CT.C24, C[25] || CT.C25, C[26] || CT.C26, C[27] || CT.C27], T._LocationL());
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[20] || CT.C20,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 280,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 279,
        [_Location_file]: null
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C29() {
      return C[29] = dart.constList([C[30] || CT.C30, C[31] || CT.C31], T._LocationL());
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[29] || CT.C29,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 278,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: date$.DatePickerMode.prototype,
        [_name]: "DatePickerMode.year",
        index: 1
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 301,
        [_Location_file]: null
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 302,
        [_Location_file]: null
      });
    },
    get C34() {
      return C[34] = dart.constList([C[35] || CT.C35, C[36] || CT.C36], T._LocationL());
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[34] || CT.C34,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 300,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mode",
        [_Location_column]: 11,
        [_Location_line]: 306,
        [_Location_file]: null
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 11,
        [_Location_line]: 307,
        [_Location_file]: null
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTitlePressed",
        [_Location_column]: 11,
        [_Location_line]: 308,
        [_Location_file]: null
      });
    },
    get C38() {
      return C[38] = dart.constList([C[39] || CT.C39, C[40] || CT.C40, C[41] || CT.C41], T._LocationL());
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[38] || CT.C38,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 305,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 299,
        [_Location_file]: null
      });
    },
    get C43() {
      return C[43] = dart.constList([C[44] || CT.C44], T._LocationL());
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[43] || CT.C43,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 298,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [EdgeInsetsDirectional_bottom]: 0,
        [EdgeInsetsDirectional_end]: 4,
        [EdgeInsetsDirectional_top]: 0,
        [EdgeInsetsDirectional_start]: 16
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 8
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 36,
        [_Location_line]: 396,
        [_Location_file]: null
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 29,
        [_Location_line]: 397,
        [_Location_file]: null
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 29,
        [_Location_line]: 398,
        [_Location_file]: null
      });
    },
    get C49() {
      return C[49] = dart.constList([C[50] || CT.C50, C[51] || CT.C51, C[52] || CT.C52], T._LocationL());
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[49] || CT.C49,
        [_Location_name]: null,
        [_Location_column]: 34,
        [_Location_line]: 395,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 395,
        [_Location_file]: null
      });
    },
    get C54() {
      return C[54] = dart.constList([C[55] || CT.C55], T._LocationL());
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[54] || CT.C54,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 394,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 35,
        [_Location_line]: 406,
        [_Location_file]: null
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 29,
        [_Location_line]: 407,
        [_Location_file]: null
      });
    },
    get C57() {
      return C[57] = dart.constList([C[58] || CT.C58, C[59] || CT.C59], T._LocationL());
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[57] || CT.C57,
        [_Location_name]: null,
        [_Location_column]: 34,
        [_Location_line]: 405,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "turns",
        [_Location_column]: 27,
        [_Location_line]: 404,
        [_Location_file]: null
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 405,
        [_Location_file]: null
      });
    },
    get C61() {
      return C[61] = dart.constList([C[62] || CT.C62, C[63] || CT.C63], T._LocationL());
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[61] || CT.C61,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 403,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 23,
        [_Location_line]: 393,
        [_Location_file]: null
      });
    },
    get C65() {
      return C[65] = dart.constList([C[66] || CT.C66], T._LocationL());
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[65] || CT.C65,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 392,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 21,
        [_Location_line]: 391,
        [_Location_file]: null
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 392,
        [_Location_file]: null
      });
    },
    get C68() {
      return C[68] = dart.constList([C[69] || CT.C69, C[70] || CT.C70], T._LocationL());
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[68] || CT.C68,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 390,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 19,
        [_Location_line]: 389,
        [_Location_file]: null
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 390,
        [_Location_file]: null
      });
    },
    get C72() {
      return C[72] = dart.constList([C[73] || CT.C73, C[74] || CT.C74], T._LocationL());
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[72] || CT.C72,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 388,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 17,
        [_Location_line]: 387,
        [_Location_file]: null
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 388,
        [_Location_file]: null
      });
    },
    get C76() {
      return C[76] = dart.constList([C[77] || CT.C77, C[78] || CT.C78], T._LocationL());
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[76] || CT.C76,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 386,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 15,
        [_Location_line]: 383,
        [_Location_file]: null
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeSemantics",
        [_Location_column]: 15,
        [_Location_line]: 384,
        [_Location_file]: null
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "button",
        [_Location_column]: 15,
        [_Location_line]: 385,
        [_Location_file]: null
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 386,
        [_Location_file]: null
      });
    },
    get C80() {
      return C[80] = dart.constList([C[81] || CT.C81, C[82] || CT.C82, C[83] || CT.C83, C[84] || CT.C84], T._LocationL());
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[80] || CT.C80,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 382,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 382,
        [_Location_file]: null
      });
    },
    get C86() {
      return C[86] = dart.constList([C[87] || CT.C87], T._LocationL());
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[86] || CT.C86,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 381,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 28,
        [_Location_line]: 419,
        [_Location_file]: null
      });
    },
    get C90() {
      return C[90] = dart.constList([C[91] || CT.C91], T._LocationL());
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[90] || CT.C90,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 419,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C[89] || CT.C89,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 108
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 380,
        [_Location_file]: null
      });
    },
    get C93() {
      return C[93] = dart.constList([C[94] || CT.C94], T._LocationL());
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[93] || CT.C93,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 379,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 377,
        [_Location_file]: null
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 378,
        [_Location_file]: null
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 379,
        [_Location_file]: null
      });
    },
    get C96() {
      return C[96] = dart.constList([C[97] || CT.C97, C[98] || CT.C98, C[99] || CT.C99], T._LocationL());
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[96] || CT.C96,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 376,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$0]: "TraversalDirection.left",
        index: 3
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [DirectionalFocusIntent_ignoreTextFields]: true,
        [DirectionalFocusIntent_direction]: C[101] || CT.C101
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$0]: "TraversalDirection.right",
        index: 1
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [DirectionalFocusIntent_ignoreTextFields]: true,
        [DirectionalFocusIntent_direction]: C[103] || CT.C103
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$0]: "TraversalDirection.down",
        index: 2
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [DirectionalFocusIntent_ignoreTextFields]: true,
        [DirectionalFocusIntent_direction]: C[105] || CT.C105
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$0]: "TraversalDirection.up",
        index: 0
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [DirectionalFocusIntent_ignoreTextFields]: true,
        [DirectionalFocusIntent_direction]: C[107] || CT.C107
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 738,
        [_Location_file]: null
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectedDate",
        [_Location_column]: 7,
        [_Location_line]: 739,
        [_Location_file]: null
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "currentDate",
        [_Location_column]: 7,
        [_Location_line]: 740,
        [_Location_file]: null
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onChanged",
        [_Location_column]: 7,
        [_Location_line]: 741,
        [_Location_file]: null
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "firstDate",
        [_Location_column]: 7,
        [_Location_line]: 742,
        [_Location_file]: null
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "lastDate",
        [_Location_column]: 7,
        [_Location_line]: 743,
        [_Location_file]: null
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "displayedMonth",
        [_Location_column]: 7,
        [_Location_line]: 744,
        [_Location_file]: null
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectableDayPredicate",
        [_Location_column]: 7,
        [_Location_line]: 745,
        [_Location_file]: null
      });
    },
    get C109() {
      return C[109] = dart.constList([C[110] || CT.C110, C[111] || CT.C111, C[112] || CT.C112, C[113] || CT.C113, C[114] || CT.C114, C[115] || CT.C115, C[116] || CT.C116, C[117] || CT.C117], T._LocationL());
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[109] || CT.C109,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 737,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C120() {
      return C[120] = dart.constList([], T._LocationL());
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[120] || CT.C120,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 763,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: spacer.Spacer.prototype,
        [Widget__location]: C[119] || CT.C119,
        [Widget_key]: null,
        [Spacer_flex]: 1
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 42,
        [_Location_line]: 765,
        [_Location_file]: null
      });
    },
    get C123() {
      return C[123] = dart.constList([C[124] || CT.C124], T._LocationL());
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[123] || CT.C123,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 765,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: true,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57694
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget__location]: C[122] || CT.C122,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_color]: null,
        [Icon_size]: null,
        [Icon_icon]: C[125] || CT.C125
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 19,
        [_Location_line]: 765,
        [_Location_file]: null
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 19,
        [_Location_line]: 766,
        [_Location_file]: null
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tooltip",
        [_Location_column]: 19,
        [_Location_line]: 767,
        [_Location_file]: null
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 19,
        [_Location_line]: 768,
        [_Location_file]: null
      });
    },
    get C127() {
      return C[127] = dart.constList([C[128] || CT.C128, C[129] || CT.C129, C[130] || CT.C130, C[131] || CT.C131], T._LocationL());
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[127] || CT.C127,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 764,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 42,
        [_Location_line]: 771,
        [_Location_file]: null
      });
    },
    get C134() {
      return C[134] = dart.constList([C[135] || CT.C135], T._LocationL());
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[134] || CT.C134,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 771,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: true,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57695
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget__location]: C[133] || CT.C133,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_color]: null,
        [Icon_size]: null,
        [Icon_icon]: C[136] || CT.C136
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 19,
        [_Location_line]: 771,
        [_Location_file]: null
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 19,
        [_Location_line]: 772,
        [_Location_file]: null
      });
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tooltip",
        [_Location_column]: 19,
        [_Location_line]: 773,
        [_Location_file]: null
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 19,
        [_Location_line]: 774,
        [_Location_file]: null
      });
    },
    get C138() {
      return C[138] = dart.constList([C[139] || CT.C139, C[140] || CT.C140, C[141] || CT.C141, C[142] || CT.C142], T._LocationL());
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[138] || CT.C138,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 770,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 15,
        [_Location_line]: 762,
        [_Location_file]: null
      });
    },
    get C144() {
      return C[144] = dart.constList([C[145] || CT.C145], T._LocationL());
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[144] || CT.C144,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 761,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 13,
        [_Location_line]: 759,
        [_Location_file]: null
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 13,
        [_Location_line]: 760,
        [_Location_file]: null
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 761,
        [_Location_file]: null
      });
    },
    get C147() {
      return C[147] = dart.constList([C[148] || CT.C148, C[149] || CT.C149, C[150] || CT.C150], T._LocationL());
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[147] || CT.C147,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 758,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 19,
        [_Location_line]: 788,
        [_Location_file]: null
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 19,
        [_Location_line]: 789,
        [_Location_file]: null
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemBuilder",
        [_Location_column]: 19,
        [_Location_line]: 790,
        [_Location_file]: null
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemCount",
        [_Location_column]: 19,
        [_Location_line]: 791,
        [_Location_file]: null
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 19,
        [_Location_line]: 792,
        [_Location_file]: null
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPageChanged",
        [_Location_column]: 19,
        [_Location_line]: 793,
        [_Location_file]: null
      });
    },
    get C152() {
      return C[152] = dart.constList([C[153] || CT.C153, C[154] || CT.C154, C[155] || CT.C155, C[156] || CT.C156, C[157] || CT.C157, C[158] || CT.C158], T._LocationL());
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[152] || CT.C152,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 787,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "date",
        [_Location_column]: 17,
        [_Location_line]: 786,
        [_Location_file]: null
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 787,
        [_Location_file]: null
      });
    },
    get C160() {
      return C[160] = dart.constList([C[161] || CT.C161, C[162] || CT.C162], T._LocationL());
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[160] || CT.C160,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 785,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shortcuts",
        [_Location_column]: 15,
        [_Location_line]: 781,
        [_Location_file]: null
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 15,
        [_Location_line]: 782,
        [_Location_file]: null
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 15,
        [_Location_line]: 783,
        [_Location_file]: null
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFocusChange",
        [_Location_column]: 15,
        [_Location_line]: 784,
        [_Location_file]: null
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 785,
        [_Location_file]: null
      });
    },
    get C164() {
      return C[164] = dart.constList([C[165] || CT.C165, C[166] || CT.C166, C[167] || CT.C167, C[168] || CT.C168, C[169] || CT.C169], T._LocationL());
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[164] || CT.C164,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 780,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 780,
        [_Location_file]: null
      });
    },
    get C171() {
      return C[171] = dart.constList([C[172] || CT.C172], T._LocationL());
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[171] || CT.C171,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 779,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 757,
        [_Location_file]: null
      });
    },
    get C174() {
      return C[174] = dart.constList([C[175] || CT.C175], T._LocationL());
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[174] || CT.C174,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 756,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 756,
        [_Location_file]: null
      });
    },
    get C177() {
      return C[177] = dart.constList([C[178] || CT.C178], T._LocationL());
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[177] || CT.C177,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 755,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C179() {
      return C[179] = dart.constMap(T.TraversalDirectionL(), T.intL(), [C[107] || CT.C107, -7, C[103] || CT.C103, 1, C[105] || CT.C105, 7, C[101] || CT.C101, -1]);
    },
    get C182() {
      return C[182] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 35,
        [_Location_line]: 941,
        [_Location_file]: null
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 44,
        [_Location_line]: 941,
        [_Location_file]: null
      });
    },
    get C181() {
      return C[181] = dart.constList([C[182] || CT.C182, C[183] || CT.C183], T._LocationL());
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[181] || CT.C181,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 941,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 941,
        [_Location_file]: null
      });
    },
    get C185() {
      return C[185] = dart.constList([C[186] || CT.C186], T._LocationL());
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[185] || CT.C185,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 941,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 941,
        [_Location_file]: null
      });
    },
    get C188() {
      return C[188] = dart.constList([C[189] || CT.C189], T._LocationL());
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[188] || CT.C188,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 940,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[120] || CT.C120,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 977,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 39,
        [_Location_line]: 1011,
        [_Location_file]: null
      });
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 59,
        [_Location_line]: 1011,
        [_Location_file]: null
      });
    },
    get C192() {
      return C[192] = dart.constList([C[193] || CT.C193, C[194] || CT.C194], T._LocationL());
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[192] || CT.C192,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1011,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1011,
        [_Location_file]: null
      });
    },
    get C196() {
      return C[196] = dart.constList([C[197] || CT.C197], T._LocationL());
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[196] || CT.C196,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1010,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 11,
        [_Location_line]: 1009,
        [_Location_file]: null
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1010,
        [_Location_file]: null
      });
    },
    get C199() {
      return C[199] = dart.constList([C[200] || CT.C200, C[201] || CT.C201], T._LocationL());
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[199] || CT.C199,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 1008,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1017,
        [_Location_file]: null
      });
    },
    get C203() {
      return C[203] = dart.constList([C[204] || CT.C204], T._LocationL());
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[203] || CT.C203,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 1016,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 15,
        [_Location_line]: 1032,
        [_Location_file]: null
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selected",
        [_Location_column]: 15,
        [_Location_line]: 1033,
        [_Location_file]: null
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeSemantics",
        [_Location_column]: 15,
        [_Location_line]: 1034,
        [_Location_file]: null
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 1035,
        [_Location_file]: null
      });
    },
    get C206() {
      return C[206] = dart.constList([C[207] || CT.C207, C[208] || CT.C208, C[209] || CT.C209, C[210] || CT.C210], T._LocationL());
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[206] || CT.C206,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1025,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 13,
        [_Location_line]: 1021,
        [_Location_file]: null
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 13,
        [_Location_line]: 1022,
        [_Location_file]: null
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "radius",
        [_Location_column]: 13,
        [_Location_line]: 1023,
        [_Location_file]: null
      });
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashColor",
        [_Location_column]: 13,
        [_Location_line]: 1024,
        [_Location_file]: null
      });
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1025,
        [_Location_file]: null
      });
    },
    get C212() {
      return C[212] = dart.constList([C[213] || CT.C213, C[214] || CT.C214, C[215] || CT.C215, C[216] || CT.C216, C[217] || CT.C217], T._LocationL());
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[212] || CT.C212,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 1020,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: scroll_physics.ClampingScrollPhysics.prototype,
        [ScrollPhysics_parent]: null
      });
    },
    get C221() {
      return C[221] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 9,
        [_Location_line]: 1049,
        [_Location_file]: null
      });
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gridDelegate",
        [_Location_column]: 9,
        [_Location_line]: 1050,
        [_Location_file]: null
      });
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "childrenDelegate",
        [_Location_column]: 9,
        [_Location_line]: 1051,
        [_Location_file]: null
      });
    },
    get C220() {
      return C[220] = dart.constList([C[221] || CT.C221, C[222] || CT.C222, C[223] || CT.C223], T._LocationL());
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[220] || CT.C220,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 1048,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 1045,
        [_Location_file]: null
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1048,
        [_Location_file]: null
      });
    },
    get C225() {
      return C[225] = dart.constList([C[226] || CT.C226, C[227] || CT.C227], T._LocationL());
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[225] || CT.C225,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1044,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [_name$1]: "DragStartBehavior.start",
        index: 1
      });
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 30,
        [_Location_line]: 1231,
        [_Location_file]: null
      });
    },
    get C232() {
      return C[232] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 42,
        [_Location_line]: 1231,
        [_Location_file]: null
      });
    },
    get C230() {
      return C[230] = dart.constList([C[231] || CT.C231, C[232] || CT.C232], T._LocationL());
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[230] || CT.C230,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1231,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selected",
        [_Location_column]: 13,
        [_Location_line]: 1230,
        [_Location_file]: null
      });
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1231,
        [_Location_file]: null
      });
    },
    get C234() {
      return C[234] = dart.constList([C[235] || CT.C235, C[236] || CT.C236], T._LocationL());
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[234] || CT.C234,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1229,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1229,
        [_Location_file]: null
      });
    },
    get C238() {
      return C[238] = dart.constList([C[239] || CT.C239], T._LocationL());
    },
    get C237() {
      return C[237] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[238] || CT.C238,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1228,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 9,
        [_Location_line]: 1225,
        [_Location_file]: null
      });
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 1226,
        [_Location_file]: null
      });
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 1227,
        [_Location_file]: null
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1228,
        [_Location_file]: null
      });
    },
    get C241() {
      return C[241] = dart.constList([C[242] || CT.C242, C[243] || CT.C243, C[244] || CT.C244, C[245] || CT.C245], T._LocationL());
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[241] || CT.C241,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1224,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1224,
        [_Location_file]: null
      });
    },
    get C247() {
      return C[247] = dart.constList([C[248] || CT.C248], T._LocationL());
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[247] || CT.C247,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 1223,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C251() {
      return C[251] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1239,
        [_Location_file]: null
      });
    },
    get C250() {
      return C[250] = dart.constList([C[251] || CT.C251], T._LocationL());
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[250] || CT.C250,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1238,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 1243,
        [_Location_file]: null
      });
    },
    get C255() {
      return C[255] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 9,
        [_Location_line]: 1244,
        [_Location_file]: null
      });
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1245,
        [_Location_file]: null
      });
    },
    get C253() {
      return C[253] = dart.constList([C[254] || CT.C254, C[255] || CT.C255, C[256] || CT.C256], T._LocationL());
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[253] || CT.C253,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1242,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[120] || CT.C120,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 1261,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C257() {
      return C[257] = dart.const({
        __proto__: divider.Divider.prototype,
        [Widget__location]: C[258] || CT.C258,
        [Widget_key]: null,
        [Divider_color]: null,
        [Divider_endIndent]: null,
        [Divider_indent]: null,
        [Divider_thickness]: null,
        [Divider_height]: null
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 16
      });
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 13,
        [_Location_line]: 1264,
        [_Location_file]: null
      });
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 13,
        [_Location_line]: 1265,
        [_Location_file]: null
      });
    },
    get C264() {
      return C[264] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gridDelegate",
        [_Location_column]: 13,
        [_Location_line]: 1266,
        [_Location_file]: null
      });
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemBuilder",
        [_Location_column]: 13,
        [_Location_line]: 1267,
        [_Location_file]: null
      });
    },
    get C266() {
      return C[266] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemCount",
        [_Location_column]: 13,
        [_Location_line]: 1268,
        [_Location_file]: null
      });
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 13,
        [_Location_line]: 1269,
        [_Location_file]: null
      });
    },
    get C261() {
      return C[261] = dart.constList([C[262] || CT.C262, C[263] || CT.C263, C[264] || CT.C264, C[265] || CT.C265, C[266] || CT.C266, C[267] || CT.C267], T._LocationL());
    },
    get C260() {
      return C[260] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[261] || CT.C261,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 1263,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1263,
        [_Location_file]: null
      });
    },
    get C269() {
      return C[269] = dart.constList([C[270] || CT.C270], T._LocationL());
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[269] || CT.C269,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 1262,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[120] || CT.C120,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 1272,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C271() {
      return C[271] = dart.const({
        __proto__: divider.Divider.prototype,
        [Widget__location]: C[272] || CT.C272,
        [Widget_key]: null,
        [Divider_color]: null,
        [Divider_endIndent]: null,
        [Divider_indent]: null,
        [Divider_thickness]: null,
        [Divider_height]: null
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 1260,
        [_Location_file]: null
      });
    },
    get C274() {
      return C[274] = dart.constList([C[275] || CT.C275], T._LocationL());
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[274] || CT.C274,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1259,
        [_Location_file]: "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart"
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: calendar_date_picker._DayPickerGridDelegate.prototype
      });
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: calendar_date_picker._YearPickerGridDelegate.prototype
      });
    }
  }, false);
  var C = Array(278).fill(void 0);
  var I = [
    "file:///D:/Users/u19187166/Documents/flutter/packages/flutter/lib/src/material/calendar_date_picker.dart",
    "package:flutter/src/material/calendar_date_picker.dart"
  ];
  var initialDate$ = dart.privateName(calendar_date_picker, "CalendarDatePicker.initialDate");
  var firstDate$ = dart.privateName(calendar_date_picker, "CalendarDatePicker.firstDate");
  var lastDate$ = dart.privateName(calendar_date_picker, "CalendarDatePicker.lastDate");
  var currentDate$ = dart.privateName(calendar_date_picker, "CalendarDatePicker.currentDate");
  var onDateChanged$ = dart.privateName(calendar_date_picker, "CalendarDatePicker.onDateChanged");
  var onDisplayedMonthChanged$ = dart.privateName(calendar_date_picker, "CalendarDatePicker.onDisplayedMonthChanged");
  var initialCalendarMode$ = dart.privateName(calendar_date_picker, "CalendarDatePicker.initialCalendarMode");
  var selectableDayPredicate$ = dart.privateName(calendar_date_picker, "CalendarDatePicker.selectableDayPredicate");
  var _name = dart.privateName(date$, "_name");
  calendar_date_picker.CalendarDatePicker = class CalendarDatePicker extends framework.StatefulWidget {
    get initialDate() {
      return this[initialDate$];
    }
    set initialDate(value) {
      super.initialDate = value;
    }
    get firstDate() {
      return this[firstDate$];
    }
    set firstDate(value) {
      super.firstDate = value;
    }
    get lastDate() {
      return this[lastDate$];
    }
    set lastDate(value) {
      super.lastDate = value;
    }
    get currentDate() {
      return this[currentDate$];
    }
    set currentDate(value) {
      super.currentDate = value;
    }
    get onDateChanged() {
      return this[onDateChanged$];
    }
    set onDateChanged(value) {
      super.onDateChanged = value;
    }
    get onDisplayedMonthChanged() {
      return this[onDisplayedMonthChanged$];
    }
    set onDisplayedMonthChanged(value) {
      super.onDisplayedMonthChanged = value;
    }
    get initialCalendarMode() {
      return this[initialCalendarMode$];
    }
    set initialCalendarMode(value) {
      super.initialCalendarMode = value;
    }
    get selectableDayPredicate() {
      return this[selectableDayPredicate$];
    }
    set selectableDayPredicate(value) {
      super.selectableDayPredicate = value;
    }
    createState() {
      return new calendar_date_picker._CalendarDatePickerState.new();
    }
  };
  (calendar_date_picker.CalendarDatePicker.new = function(opts) {
    let t0;
    let key = opts && 'key' in opts ? opts.key : null;
    let initialDate = opts && 'initialDate' in opts ? opts.initialDate : null;
    if (initialDate == null) dart.nullFailed(I[0], 88, 23, "initialDate");
    let firstDate = opts && 'firstDate' in opts ? opts.firstDate : null;
    if (firstDate == null) dart.nullFailed(I[0], 89, 23, "firstDate");
    let lastDate = opts && 'lastDate' in opts ? opts.lastDate : null;
    if (lastDate == null) dart.nullFailed(I[0], 90, 23, "lastDate");
    let currentDate = opts && 'currentDate' in opts ? opts.currentDate : null;
    let onDateChanged = opts && 'onDateChanged' in opts ? opts.onDateChanged : null;
    if (onDateChanged == null) dart.nullFailed(I[0], 92, 19, "onDateChanged");
    let onDisplayedMonthChanged = opts && 'onDisplayedMonthChanged' in opts ? opts.onDisplayedMonthChanged : null;
    let initialCalendarMode = opts && 'initialCalendarMode' in opts ? opts.initialCalendarMode : C[0] || CT.C0;
    if (initialCalendarMode == null) dart.nullFailed(I[0], 94, 10, "initialCalendarMode");
    let selectableDayPredicate = opts && 'selectableDayPredicate' in opts ? opts.selectableDayPredicate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onDateChanged$] = onDateChanged;
    this[onDisplayedMonthChanged$] = onDisplayedMonthChanged;
    this[initialCalendarMode$] = initialCalendarMode;
    this[selectableDayPredicate$] = selectableDayPredicate;
    if (!(initialDate != null)) dart.assertFailed(null, I[0], 96, 15, "initialDate != null");
    if (!(firstDate != null)) dart.assertFailed(null, I[0], 97, 15, "firstDate != null");
    if (!(lastDate != null)) dart.assertFailed(null, I[0], 98, 15, "lastDate != null");
    this[initialDate$] = date$.DateUtils.dateOnly(initialDate);
    this[firstDate$] = date$.DateUtils.dateOnly(firstDate);
    this[lastDate$] = date$.DateUtils.dateOnly(lastDate);
    this[currentDate$] = date$.DateUtils.dateOnly((t0 = currentDate, t0 == null ? new core.DateTime.now() : t0));
    if (!(onDateChanged != null)) dart.assertFailed(null, I[0], 103, 15, "onDateChanged != null");
    if (!(initialCalendarMode != null)) dart.assertFailed(null, I[0], 104, 15, "initialCalendarMode != null");
    calendar_date_picker.CalendarDatePicker.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    if (!!dart.test(this.lastDate.isBefore(this.firstDate))) dart.assertFailed("lastDate " + dart.str(this.lastDate) + " must be on or after firstDate " + dart.str(this.firstDate) + ".", I[0], 107, 7, "!this.lastDate.isBefore(this.firstDate)");
    if (!!dart.test(this.initialDate.isBefore(this.firstDate))) dart.assertFailed("initialDate " + dart.str(this.initialDate) + " must be on or after firstDate " + dart.str(this.firstDate) + ".", I[0], 111, 7, "!this.initialDate.isBefore(this.firstDate)");
    if (!!dart.test(this.initialDate.isAfter(this.lastDate))) dart.assertFailed("initialDate " + dart.str(this.initialDate) + " must be on or before lastDate " + dart.str(this.lastDate) + ".", I[0], 115, 7, "!this.initialDate.isAfter(this.lastDate)");
    if (!(this.selectableDayPredicate == null || dart.test(dart.nullCheck(this.selectableDayPredicate)(this.initialDate)))) dart.assertFailed("Provided initialDate " + dart.str(this.initialDate) + " must satisfy provided selectableDayPredicate.", I[0], 119, 7, "selectableDayPredicate == null || selectableDayPredicate!(this.initialDate)");
  }).prototype = calendar_date_picker.CalendarDatePicker.prototype;
  dart.addTypeTests(calendar_date_picker.CalendarDatePicker);
  dart.addTypeCaches(calendar_date_picker.CalendarDatePicker);
  dart.setMethodSignature(calendar_date_picker.CalendarDatePicker, () => ({
    __proto__: dart.getMethods(calendar_date_picker.CalendarDatePicker.__proto__),
    createState: dart.fnType(calendar_date_picker._CalendarDatePickerState, [])
  }));
  dart.setLibraryUri(calendar_date_picker.CalendarDatePicker, I[1]);
  dart.setFieldSignature(calendar_date_picker.CalendarDatePicker, () => ({
    __proto__: dart.getFields(calendar_date_picker.CalendarDatePicker.__proto__),
    initialDate: dart.finalFieldType(core.DateTime),
    firstDate: dart.finalFieldType(core.DateTime),
    lastDate: dart.finalFieldType(core.DateTime),
    currentDate: dart.finalFieldType(core.DateTime),
    onDateChanged: dart.finalFieldType(dart.fnType(dart.void, [core.DateTime])),
    onDisplayedMonthChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.DateTime]))),
    initialCalendarMode: dart.finalFieldType(date$.DatePickerMode),
    selectableDayPredicate: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [core.DateTime])))
  }));
  var _announcedInitialDate = dart.privateName(calendar_date_picker, "_announcedInitialDate");
  var ___CalendarDatePickerState__mode = dart.privateName(calendar_date_picker, "_#_CalendarDatePickerState#_mode");
  var ___CalendarDatePickerState__mode_isSet = dart.privateName(calendar_date_picker, "_#_CalendarDatePickerState#_mode#isSet");
  var ___CalendarDatePickerState__currentDisplayedMonthDate = dart.privateName(calendar_date_picker, "_#_CalendarDatePickerState#_currentDisplayedMonthDate");
  var ___CalendarDatePickerState__currentDisplayedMonthDate_isSet = dart.privateName(calendar_date_picker, "_#_CalendarDatePickerState#_currentDisplayedMonthDate#isSet");
  var ___CalendarDatePickerState__selectedDate = dart.privateName(calendar_date_picker, "_#_CalendarDatePickerState#_selectedDate");
  var ___CalendarDatePickerState__selectedDate_isSet = dart.privateName(calendar_date_picker, "_#_CalendarDatePickerState#_selectedDate#isSet");
  var _monthPickerKey = dart.privateName(calendar_date_picker, "_monthPickerKey");
  var _yearPickerKey = dart.privateName(calendar_date_picker, "_yearPickerKey");
  var ___CalendarDatePickerState__localizations = dart.privateName(calendar_date_picker, "_#_CalendarDatePickerState#_localizations");
  var ___CalendarDatePickerState__localizations_isSet = dart.privateName(calendar_date_picker, "_#_CalendarDatePickerState#_localizations#isSet");
  var ___CalendarDatePickerState__textDirection = dart.privateName(calendar_date_picker, "_#_CalendarDatePickerState#_textDirection");
  var ___CalendarDatePickerState__textDirection_isSet = dart.privateName(calendar_date_picker, "_#_CalendarDatePickerState#_textDirection#isSet");
  var _mode = dart.privateName(calendar_date_picker, "_mode");
  var _currentDisplayedMonthDate = dart.privateName(calendar_date_picker, "_currentDisplayedMonthDate");
  var _selectedDate = dart.privateName(calendar_date_picker, "_selectedDate");
  var _localizations = dart.privateName(calendar_date_picker, "_localizations");
  var _textDirection = dart.privateName(calendar_date_picker, "_textDirection");
  var _name$ = dart.privateName(platform, "_name");
  var _vibrate = dart.privateName(calendar_date_picker, "_vibrate");
  var _handleModeChanged = dart.privateName(calendar_date_picker, "_handleModeChanged");
  var _handleMonthChanged = dart.privateName(calendar_date_picker, "_handleMonthChanged");
  var _handleYearChanged = dart.privateName(calendar_date_picker, "_handleYearChanged");
  var _handleDayChanged = dart.privateName(calendar_date_picker, "_handleDayChanged");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var _buildPicker = dart.privateName(calendar_date_picker, "_buildPicker");
  calendar_date_picker._CalendarDatePickerState = class _CalendarDatePickerState extends framework.State$(calendar_date_picker.CalendarDatePicker) {
    get [_mode]() {
      let t0;
      return dart.test(this[___CalendarDatePickerState__mode_isSet]) ? (t0 = this[___CalendarDatePickerState__mode], t0) : dart.throw(new _internal.LateError.fieldNI("_mode"));
    }
    set [_mode](t0) {
      if (t0 == null) dart.nullFailed(I[0], 154, 23, "null");
      this[___CalendarDatePickerState__mode_isSet] = true;
      this[___CalendarDatePickerState__mode] = t0;
    }
    get [_currentDisplayedMonthDate]() {
      let t1;
      return dart.test(this[___CalendarDatePickerState__currentDisplayedMonthDate_isSet]) ? (t1 = this[___CalendarDatePickerState__currentDisplayedMonthDate], t1) : dart.throw(new _internal.LateError.fieldNI("_currentDisplayedMonthDate"));
    }
    set [_currentDisplayedMonthDate](t1) {
      if (t1 == null) dart.nullFailed(I[0], 155, 17, "null");
      this[___CalendarDatePickerState__currentDisplayedMonthDate_isSet] = true;
      this[___CalendarDatePickerState__currentDisplayedMonthDate] = t1;
    }
    get [_selectedDate]() {
      let t2;
      return dart.test(this[___CalendarDatePickerState__selectedDate_isSet]) ? (t2 = this[___CalendarDatePickerState__selectedDate], t2) : dart.throw(new _internal.LateError.fieldNI("_selectedDate"));
    }
    set [_selectedDate](t2) {
      if (t2 == null) dart.nullFailed(I[0], 156, 17, "null");
      this[___CalendarDatePickerState__selectedDate_isSet] = true;
      this[___CalendarDatePickerState__selectedDate] = t2;
    }
    get [_localizations]() {
      let t3;
      return dart.test(this[___CalendarDatePickerState__localizations_isSet]) ? (t3 = this[___CalendarDatePickerState__localizations], t3) : dart.throw(new _internal.LateError.fieldNI("_localizations"));
    }
    set [_localizations](t3) {
      if (t3 == null) dart.nullFailed(I[0], 159, 30, "null");
      this[___CalendarDatePickerState__localizations_isSet] = true;
      this[___CalendarDatePickerState__localizations] = t3;
    }
    get [_textDirection]() {
      let t4;
      return dart.test(this[___CalendarDatePickerState__textDirection_isSet]) ? (t4 = this[___CalendarDatePickerState__textDirection], t4) : dart.throw(new _internal.LateError.fieldNI("_textDirection"));
    }
    set [_textDirection](t4) {
      if (t4 == null) dart.nullFailed(I[0], 160, 22, "null");
      this[___CalendarDatePickerState__textDirection_isSet] = true;
      this[___CalendarDatePickerState__textDirection] = t4;
    }
    initState() {
      super.initState();
      this[_mode] = this.widget.initialCalendarMode;
      this[_currentDisplayedMonthDate] = new core.DateTime.new(this.widget.initialDate.year, this.widget.initialDate.month);
      this[_selectedDate] = this.widget.initialDate;
    }
    didUpdateWidget(oldWidget) {
      calendar_date_picker.CalendarDatePicker.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[0], 171, 43, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this.widget.initialCalendarMode != oldWidget.initialCalendarMode) {
        this[_mode] = this.widget.initialCalendarMode;
      }
      if (!dart.test(date$.DateUtils.isSameDay(this.widget.initialDate, oldWidget.initialDate))) {
        this[_currentDisplayedMonthDate] = new core.DateTime.new(this.widget.initialDate.year, this.widget.initialDate.month);
        this[_selectedDate] = this.widget.initialDate;
      }
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      if (!dart.test(debug$.debugCheckHasMaterial(this.context))) dart.assertFailed(null, I[0], 185, 12, "debugCheckHasMaterial(context)");
      if (!dart.test(debug$.debugCheckHasMaterialLocalizations(this.context))) dart.assertFailed(null, I[0], 186, 12, "debugCheckHasMaterialLocalizations(context)");
      if (!dart.test(debug.debugCheckHasDirectionality(this.context))) dart.assertFailed(null, I[0], 187, 12, "debugCheckHasDirectionality(context)");
      this[_localizations] = material_localizations.MaterialLocalizations.of(this.context);
      this[_textDirection] = basic.Directionality.of(this.context);
      if (!dart.test(this[_announcedInitialDate])) {
        this[_announcedInitialDate] = true;
        semantics_service.SemanticsService.announce(this[_localizations].formatFullDate(this[_selectedDate]), this[_textDirection]);
      }
    }
    [_vibrate]() {
      switch (theme.Theme.of(this.context).platform) {
        case C[1] || CT.C1:
        case C[2] || CT.C2:
        case C[3] || CT.C3:
        case C[4] || CT.C4:
        {
          haptic_feedback.HapticFeedback.vibrate();
          break;
        }
        case C[5] || CT.C5:
        case C[6] || CT.C6:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [_handleModeChanged](mode) {
      if (mode == null) dart.nullFailed(I[0], 213, 42, "mode");
      this[_vibrate]();
      this.setState(dart.fn(() => {
        this[_mode] = mode;
        if (this[_mode] == date$.DatePickerMode.day) {
          semantics_service.SemanticsService.announce(this[_localizations].formatMonthYear(this[_selectedDate]), this[_textDirection]);
        } else {
          semantics_service.SemanticsService.announce(this[_localizations].formatYear(this[_selectedDate]), this[_textDirection]);
        }
      }, T.VoidTovoid()));
    }
    [_handleMonthChanged](date) {
      if (date == null) dart.nullFailed(I[0], 231, 37, "date");
      this.setState(dart.fn(() => {
        let t5;
        if (this[_currentDisplayedMonthDate].year != date.year || this[_currentDisplayedMonthDate].month != date.month) {
          this[_currentDisplayedMonthDate] = new core.DateTime.new(date.year, date.month);
          t5 = this.widget.onDisplayedMonthChanged;
          t5 == null ? null : t5(this[_currentDisplayedMonthDate]);
        }
      }, T.VoidTovoid()));
    }
    [_handleYearChanged](value) {
      if (value == null) dart.nullFailed(I[0], 240, 36, "value");
      this[_vibrate]();
      if (dart.test(value.isBefore(this.widget.firstDate))) {
        value = this.widget.firstDate;
      } else if (dart.test(value.isAfter(this.widget.lastDate))) {
        value = this.widget.lastDate;
      }
      this.setState(dart.fn(() => {
        this[_mode] = date$.DatePickerMode.day;
        this[_handleMonthChanged](value);
      }, T.VoidTovoid()));
    }
    [_handleDayChanged](value) {
      if (value == null) dart.nullFailed(I[0], 255, 35, "value");
      this[_vibrate]();
      this.setState(dart.fn(() => {
        let t6, t5;
        this[_selectedDate] = value;
        t5 = this.widget;
        t6 = this[_selectedDate];
        t5.onDateChanged(t6);
      }, T.VoidTovoid()));
    }
    [_buildPicker]() {
      switch (this[_mode]) {
        case C[0] || CT.C0:
        {
          return new calendar_date_picker._MonthPicker.new({key: this[_monthPickerKey], initialMonth: this[_currentDisplayedMonthDate], currentDate: this.widget.currentDate, firstDate: this.widget.firstDate, lastDate: this.widget.lastDate, selectedDate: this[_selectedDate], onChanged: dart.bind(this, _handleDayChanged), onDisplayedMonthChanged: dart.bind(this, _handleMonthChanged), selectableDayPredicate: this.widget.selectableDayPredicate, $creationLocationd_0dea112b090073317d4: C[7] || CT.C7});
        }
        case C[32] || CT.C32:
        {
          return new basic.Padding.new({padding: C[18] || CT.C18, child: new calendar_date_picker.YearPicker.new({key: this[_yearPickerKey], currentDate: this.widget.currentDate, firstDate: this.widget.firstDate, lastDate: this.widget.lastDate, initialDate: this[_currentDisplayedMonthDate], selectedDate: this[_selectedDate], onChanged: dart.bind(this, _handleYearChanged), $creationLocationd_0dea112b090073317d4: C[19] || CT.C19}), $creationLocationd_0dea112b090073317d4: C[28] || CT.C28});
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 294, 29, "context");
      if (!dart.test(debug$.debugCheckHasMaterial(context))) dart.assertFailed(null, I[0], 295, 12, "debugCheckHasMaterial(context)");
      if (!dart.test(debug$.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, I[0], 296, 12, "debugCheckHasMaterialLocalizations(context)");
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[0], 297, 12, "debugCheckHasDirectionality(context)");
      return new basic.Stack.new({children: T.JSArrayOfWidget().of([new basic.SizedBox.new({height: 52 + 294, child: this[_buildPicker](), $creationLocationd_0dea112b090073317d4: C[33] || CT.C33}), new calendar_date_picker._DatePickerModeToggleButton.new({mode: this[_mode], title: this[_localizations].formatMonthYear(this[_currentDisplayedMonthDate]), onTitlePressed: dart.fn(() => {
              this[_handleModeChanged](this[_mode] == date$.DatePickerMode.day ? date$.DatePickerMode.year : date$.DatePickerMode.day);
            }, T.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[37] || CT.C37})]), $creationLocationd_0dea112b090073317d4: C[42] || CT.C42});
    }
  };
  (calendar_date_picker._CalendarDatePickerState.new = function() {
    this[_announcedInitialDate] = false;
    this[___CalendarDatePickerState__mode] = null;
    this[___CalendarDatePickerState__mode_isSet] = false;
    this[___CalendarDatePickerState__currentDisplayedMonthDate] = null;
    this[___CalendarDatePickerState__currentDisplayedMonthDate_isSet] = false;
    this[___CalendarDatePickerState__selectedDate] = null;
    this[___CalendarDatePickerState__selectedDate_isSet] = false;
    this[_monthPickerKey] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[_yearPickerKey] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[___CalendarDatePickerState__localizations] = null;
    this[___CalendarDatePickerState__localizations_isSet] = false;
    this[___CalendarDatePickerState__textDirection] = null;
    this[___CalendarDatePickerState__textDirection_isSet] = false;
    calendar_date_picker._CalendarDatePickerState.__proto__.new.call(this);
    ;
  }).prototype = calendar_date_picker._CalendarDatePickerState.prototype;
  dart.addTypeTests(calendar_date_picker._CalendarDatePickerState);
  dart.addTypeCaches(calendar_date_picker._CalendarDatePickerState);
  dart.setMethodSignature(calendar_date_picker._CalendarDatePickerState, () => ({
    __proto__: dart.getMethods(calendar_date_picker._CalendarDatePickerState.__proto__),
    [_vibrate]: dart.fnType(dart.void, []),
    [_handleModeChanged]: dart.fnType(dart.void, [date$.DatePickerMode]),
    [_handleMonthChanged]: dart.fnType(dart.void, [core.DateTime]),
    [_handleYearChanged]: dart.fnType(dart.void, [core.DateTime]),
    [_handleDayChanged]: dart.fnType(dart.void, [core.DateTime]),
    [_buildPicker]: dart.fnType(framework.Widget, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(calendar_date_picker._CalendarDatePickerState, () => ({
    __proto__: dart.getGetters(calendar_date_picker._CalendarDatePickerState.__proto__),
    [_mode]: date$.DatePickerMode,
    [_currentDisplayedMonthDate]: core.DateTime,
    [_selectedDate]: core.DateTime,
    [_localizations]: material_localizations.MaterialLocalizations,
    [_textDirection]: ui.TextDirection
  }));
  dart.setSetterSignature(calendar_date_picker._CalendarDatePickerState, () => ({
    __proto__: dart.getSetters(calendar_date_picker._CalendarDatePickerState.__proto__),
    [_mode]: date$.DatePickerMode,
    [_currentDisplayedMonthDate]: core.DateTime,
    [_selectedDate]: core.DateTime,
    [_localizations]: material_localizations.MaterialLocalizations,
    [_textDirection]: ui.TextDirection
  }));
  dart.setLibraryUri(calendar_date_picker._CalendarDatePickerState, I[1]);
  dart.setFieldSignature(calendar_date_picker._CalendarDatePickerState, () => ({
    __proto__: dart.getFields(calendar_date_picker._CalendarDatePickerState.__proto__),
    [_announcedInitialDate]: dart.fieldType(core.bool),
    [___CalendarDatePickerState__mode]: dart.fieldType(dart.nullable(date$.DatePickerMode)),
    [___CalendarDatePickerState__mode_isSet]: dart.fieldType(core.bool),
    [___CalendarDatePickerState__currentDisplayedMonthDate]: dart.fieldType(dart.nullable(core.DateTime)),
    [___CalendarDatePickerState__currentDisplayedMonthDate_isSet]: dart.fieldType(core.bool),
    [___CalendarDatePickerState__selectedDate]: dart.fieldType(dart.nullable(core.DateTime)),
    [___CalendarDatePickerState__selectedDate_isSet]: dart.fieldType(core.bool),
    [_monthPickerKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_yearPickerKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [___CalendarDatePickerState__localizations]: dart.fieldType(dart.nullable(material_localizations.MaterialLocalizations)),
    [___CalendarDatePickerState__localizations_isSet]: dart.fieldType(core.bool),
    [___CalendarDatePickerState__textDirection]: dart.fieldType(dart.nullable(ui.TextDirection)),
    [___CalendarDatePickerState__textDirection_isSet]: dart.fieldType(core.bool)
  }));
  var mode$ = dart.privateName(calendar_date_picker, "_DatePickerModeToggleButton.mode");
  var title$ = dart.privateName(calendar_date_picker, "_DatePickerModeToggleButton.title");
  var onTitlePressed$ = dart.privateName(calendar_date_picker, "_DatePickerModeToggleButton.onTitlePressed");
  calendar_date_picker._DatePickerModeToggleButton = class _DatePickerModeToggleButton extends framework.StatefulWidget {
    get mode() {
      return this[mode$];
    }
    set mode(value) {
      super.mode = value;
    }
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    get onTitlePressed() {
      return this[onTitlePressed$];
    }
    set onTitlePressed(value) {
      super.onTitlePressed = value;
    }
    createState() {
      return new calendar_date_picker._DatePickerModeToggleButtonState.new();
    }
  };
  (calendar_date_picker._DatePickerModeToggleButton.new = function(opts) {
    let mode = opts && 'mode' in opts ? opts.mode : null;
    if (mode == null) dart.nullFailed(I[0], 324, 19, "mode");
    let title = opts && 'title' in opts ? opts.title : null;
    if (title == null) dart.nullFailed(I[0], 325, 19, "title");
    let onTitlePressed = opts && 'onTitlePressed' in opts ? opts.onTitlePressed : null;
    if (onTitlePressed == null) dart.nullFailed(I[0], 326, 19, "onTitlePressed");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[mode$] = mode;
    this[title$] = title;
    this[onTitlePressed$] = onTitlePressed;
    calendar_date_picker._DatePickerModeToggleButton.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = calendar_date_picker._DatePickerModeToggleButton.prototype;
  dart.addTypeTests(calendar_date_picker._DatePickerModeToggleButton);
  dart.addTypeCaches(calendar_date_picker._DatePickerModeToggleButton);
  dart.setMethodSignature(calendar_date_picker._DatePickerModeToggleButton, () => ({
    __proto__: dart.getMethods(calendar_date_picker._DatePickerModeToggleButton.__proto__),
    createState: dart.fnType(calendar_date_picker._DatePickerModeToggleButtonState, [])
  }));
  dart.setLibraryUri(calendar_date_picker._DatePickerModeToggleButton, I[1]);
  dart.setFieldSignature(calendar_date_picker._DatePickerModeToggleButton, () => ({
    __proto__: dart.getFields(calendar_date_picker._DatePickerModeToggleButton.__proto__),
    mode: dart.finalFieldType(date$.DatePickerMode),
    title: dart.finalFieldType(core.String),
    onTitlePressed: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  var ___DatePickerModeToggleButtonState__controller = dart.privateName(calendar_date_picker, "_#_DatePickerModeToggleButtonState#_controller");
  var ___DatePickerModeToggleButtonState__controller_isSet = dart.privateName(calendar_date_picker, "_#_DatePickerModeToggleButtonState#_controller#isSet");
  var _controller = dart.privateName(calendar_date_picker, "_controller");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var EdgeInsetsDirectional_bottom = dart.privateName(edge_insets, "EdgeInsetsDirectional.bottom");
  var EdgeInsetsDirectional_end = dart.privateName(edge_insets, "EdgeInsetsDirectional.end");
  var EdgeInsetsDirectional_top = dart.privateName(edge_insets, "EdgeInsetsDirectional.top");
  var EdgeInsetsDirectional_start = dart.privateName(edge_insets, "EdgeInsetsDirectional.start");
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(calendar_date_picker._DatePickerModeToggleButton) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(calendar_date_picker._DatePickerModeToggleButton)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(calendar_date_picker._DatePickerModeToggleButton));
  calendar_date_picker._DatePickerModeToggleButtonState = class _DatePickerModeToggleButtonState extends State_SingleTickerProviderStateMixin$36 {
    get [_controller]() {
      let t5;
      return dart.test(this[___DatePickerModeToggleButtonState__controller_isSet]) ? (t5 = this[___DatePickerModeToggleButtonState__controller], t5) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [_controller](t5) {
      if (t5 == null) dart.nullFailed(I[0], 343, 28, "null");
      this[___DatePickerModeToggleButtonState__controller_isSet] = true;
      this[___DatePickerModeToggleButtonState__controller] = t5;
    }
    initState() {
      super.initState();
      this[_controller] = new animation_controller.AnimationController.new({value: this.widget.mode == date$.DatePickerMode.year ? 0.5 : 0.0, upperBound: 0.5, duration: C[45] || CT.C45, vsync: this});
    }
    didUpdateWidget(oldWidget) {
      calendar_date_picker._DatePickerModeToggleButton.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[0], 357, 52, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (oldWidget.mode == this.widget.mode) {
        return;
      }
      if (this.widget.mode == date$.DatePickerMode.year) {
        this[_controller].forward();
      } else {
        this[_controller].reverse();
      }
    }
    build(context) {
      let t7;
      if (context == null) dart.nullFailed(I[0], 371, 29, "context");
      let colorScheme = theme.Theme.of(context).colorScheme;
      let textTheme = theme.Theme.of(context).textTheme;
      let controlColor = colorScheme.onSurface.withOpacity(0.6);
      return new container.Container.new({padding: C[46] || CT.C46, height: 52, child: new basic.Row.new({children: (() => {
            let t6 = T.JSArrayOfWidget().of([new basic.Flexible.new({child: new basic.Semantics.new({label: material_localizations.MaterialLocalizations.of(context).selectYearSemanticsLabel, excludeSemantics: true, button: true, child: new basic.SizedBox.new({height: 52, child: new ink_well.InkWell.new({onTap: this.widget.onTitlePressed, child: new basic.Padding.new({padding: C[47] || CT.C47, child: new basic.Row.new({children: T.JSArrayOfWidget().of([new basic.Flexible.new({child: new text.Text.new(this.widget.title, {overflow: paragraph.TextOverflow.ellipsis, style: (t7 = textTheme.subtitle2, t7 == null ? null : t7.copyWith({color: controlColor})), $creationLocationd_0dea112b090073317d4: C[48] || CT.C48}), $creationLocationd_0dea112b090073317d4: C[53] || CT.C53}), new transitions.RotationTransition.new({turns: this[_controller], child: new icon.Icon.new(icons.Icons.arrow_drop_down, {color: controlColor, $creationLocationd_0dea112b090073317d4: C[56] || CT.C56}), $creationLocationd_0dea112b090073317d4: C[60] || CT.C60})]), $creationLocationd_0dea112b090073317d4: C[64] || CT.C64}), $creationLocationd_0dea112b090073317d4: C[67] || CT.C67}), $creationLocationd_0dea112b090073317d4: C[71] || CT.C71}), $creationLocationd_0dea112b090073317d4: C[75] || CT.C75}), $creationLocationd_0dea112b090073317d4: C[79] || CT.C79}), $creationLocationd_0dea112b090073317d4: C[85] || CT.C85})]);
            if (this.widget.mode == date$.DatePickerMode.day) t6[$add](C[88] || CT.C88);
            return t6;
          })(), $creationLocationd_0dea112b090073317d4: C[92] || CT.C92}), $creationLocationd_0dea112b090073317d4: C[95] || CT.C95});
    }
    dispose() {
      this[_controller].dispose();
      super.dispose();
    }
  };
  (calendar_date_picker._DatePickerModeToggleButtonState.new = function() {
    this[___DatePickerModeToggleButtonState__controller] = null;
    this[___DatePickerModeToggleButtonState__controller_isSet] = false;
    calendar_date_picker._DatePickerModeToggleButtonState.__proto__.new.call(this);
    ;
  }).prototype = calendar_date_picker._DatePickerModeToggleButtonState.prototype;
  dart.addTypeTests(calendar_date_picker._DatePickerModeToggleButtonState);
  dart.addTypeCaches(calendar_date_picker._DatePickerModeToggleButtonState);
  dart.setMethodSignature(calendar_date_picker._DatePickerModeToggleButtonState, () => ({
    __proto__: dart.getMethods(calendar_date_picker._DatePickerModeToggleButtonState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(calendar_date_picker._DatePickerModeToggleButtonState, () => ({
    __proto__: dart.getGetters(calendar_date_picker._DatePickerModeToggleButtonState.__proto__),
    [_controller]: animation_controller.AnimationController
  }));
  dart.setSetterSignature(calendar_date_picker._DatePickerModeToggleButtonState, () => ({
    __proto__: dart.getSetters(calendar_date_picker._DatePickerModeToggleButtonState.__proto__),
    [_controller]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(calendar_date_picker._DatePickerModeToggleButtonState, I[1]);
  dart.setFieldSignature(calendar_date_picker._DatePickerModeToggleButtonState, () => ({
    __proto__: dart.getFields(calendar_date_picker._DatePickerModeToggleButtonState.__proto__),
    [___DatePickerModeToggleButtonState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [___DatePickerModeToggleButtonState__controller_isSet]: dart.fieldType(core.bool)
  }));
  calendar_date_picker._MonthPicker = class _MonthPicker extends framework.StatefulWidget {
    createState() {
      return new calendar_date_picker._MonthPickerState.new();
    }
  };
  (calendar_date_picker._MonthPicker.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let initialMonth = opts && 'initialMonth' in opts ? opts.initialMonth : null;
    if (initialMonth == null) dart.nullFailed(I[0], 436, 19, "initialMonth");
    let currentDate = opts && 'currentDate' in opts ? opts.currentDate : null;
    if (currentDate == null) dart.nullFailed(I[0], 437, 19, "currentDate");
    let firstDate = opts && 'firstDate' in opts ? opts.firstDate : null;
    if (firstDate == null) dart.nullFailed(I[0], 438, 19, "firstDate");
    let lastDate = opts && 'lastDate' in opts ? opts.lastDate : null;
    if (lastDate == null) dart.nullFailed(I[0], 439, 19, "lastDate");
    let selectedDate = opts && 'selectedDate' in opts ? opts.selectedDate : null;
    if (selectedDate == null) dart.nullFailed(I[0], 440, 19, "selectedDate");
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    if (onChanged == null) dart.nullFailed(I[0], 441, 19, "onChanged");
    let onDisplayedMonthChanged = opts && 'onDisplayedMonthChanged' in opts ? opts.onDisplayedMonthChanged : null;
    if (onDisplayedMonthChanged == null) dart.nullFailed(I[0], 442, 19, "onDisplayedMonthChanged");
    let selectableDayPredicate = opts && 'selectableDayPredicate' in opts ? opts.selectableDayPredicate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.initialMonth = initialMonth;
    this.currentDate = currentDate;
    this.firstDate = firstDate;
    this.lastDate = lastDate;
    this.selectedDate = selectedDate;
    this.onChanged = onChanged;
    this.onDisplayedMonthChanged = onDisplayedMonthChanged;
    this.selectableDayPredicate = selectableDayPredicate;
    if (!(selectedDate != null)) dart.assertFailed(null, I[0], 444, 15, "selectedDate != null");
    if (!(currentDate != null)) dart.assertFailed(null, I[0], 445, 15, "currentDate != null");
    if (!(onChanged != null)) dart.assertFailed(null, I[0], 446, 15, "onChanged != null");
    if (!(firstDate != null)) dart.assertFailed(null, I[0], 447, 15, "firstDate != null");
    if (!(lastDate != null)) dart.assertFailed(null, I[0], 448, 15, "lastDate != null");
    if (!!dart.test(firstDate.isAfter(lastDate))) dart.assertFailed(null, I[0], 449, 15, "!firstDate.isAfter(lastDate)");
    if (!!dart.test(selectedDate.isBefore(firstDate))) dart.assertFailed(null, I[0], 450, 15, "!selectedDate.isBefore(firstDate)");
    if (!!dart.test(selectedDate.isAfter(lastDate))) dart.assertFailed(null, I[0], 451, 15, "!selectedDate.isAfter(lastDate)");
    calendar_date_picker._MonthPicker.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = calendar_date_picker._MonthPicker.prototype;
  dart.addTypeTests(calendar_date_picker._MonthPicker);
  dart.addTypeCaches(calendar_date_picker._MonthPicker);
  dart.setMethodSignature(calendar_date_picker._MonthPicker, () => ({
    __proto__: dart.getMethods(calendar_date_picker._MonthPicker.__proto__),
    createState: dart.fnType(calendar_date_picker._MonthPickerState, [])
  }));
  dart.setLibraryUri(calendar_date_picker._MonthPicker, I[1]);
  dart.setFieldSignature(calendar_date_picker._MonthPicker, () => ({
    __proto__: dart.getFields(calendar_date_picker._MonthPicker.__proto__),
    initialMonth: dart.finalFieldType(core.DateTime),
    currentDate: dart.finalFieldType(core.DateTime),
    firstDate: dart.finalFieldType(core.DateTime),
    lastDate: dart.finalFieldType(core.DateTime),
    selectedDate: dart.finalFieldType(core.DateTime),
    onChanged: dart.finalFieldType(dart.fnType(dart.void, [core.DateTime])),
    onDisplayedMonthChanged: dart.finalFieldType(dart.fnType(dart.void, [core.DateTime])),
    selectableDayPredicate: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [core.DateTime])))
  }));
  var _pageViewKey = dart.privateName(calendar_date_picker, "_pageViewKey");
  var ___MonthPickerState__currentMonth = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_currentMonth");
  var ___MonthPickerState__currentMonth_isSet = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_currentMonth#isSet");
  var ___MonthPickerState__nextMonthDate = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_nextMonthDate");
  var ___MonthPickerState__nextMonthDate_isSet = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_nextMonthDate#isSet");
  var ___MonthPickerState__previousMonthDate = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_previousMonthDate");
  var ___MonthPickerState__previousMonthDate_isSet = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_previousMonthDate#isSet");
  var ___MonthPickerState__pageController = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_pageController");
  var ___MonthPickerState__pageController_isSet = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_pageController#isSet");
  var ___MonthPickerState__localizations = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_localizations");
  var ___MonthPickerState__localizations_isSet = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_localizations#isSet");
  var ___MonthPickerState__textDirection = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_textDirection");
  var ___MonthPickerState__textDirection_isSet = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_textDirection#isSet");
  var _shortcutMap = dart.privateName(calendar_date_picker, "_shortcutMap");
  var _actionMap = dart.privateName(calendar_date_picker, "_actionMap");
  var ___MonthPickerState__dayGridFocus = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_dayGridFocus");
  var ___MonthPickerState__dayGridFocus_isSet = dart.privateName(calendar_date_picker, "_#_MonthPickerState#_dayGridFocus#isSet");
  var _focusedDay = dart.privateName(calendar_date_picker, "_focusedDay");
  var _currentMonth = dart.privateName(calendar_date_picker, "_currentMonth");
  var _nextMonthDate = dart.privateName(calendar_date_picker, "_nextMonthDate");
  var _previousMonthDate = dart.privateName(calendar_date_picker, "_previousMonthDate");
  var _pageController = dart.privateName(calendar_date_picker, "_pageController");
  var _dayGridFocus = dart.privateName(calendar_date_picker, "_dayGridFocus");
  var DirectionalFocusIntent_ignoreTextFields = dart.privateName(focus_traversal, "DirectionalFocusIntent.ignoreTextFields");
  var _name$0 = dart.privateName(focus_traversal, "_name");
  var DirectionalFocusIntent_direction = dart.privateName(focus_traversal, "DirectionalFocusIntent.direction");
  var _handleGridNextFocus = dart.privateName(calendar_date_picker, "_handleGridNextFocus");
  var _handleGridPreviousFocus = dart.privateName(calendar_date_picker, "_handleGridPreviousFocus");
  var _handleDirectionFocus = dart.privateName(calendar_date_picker, "_handleDirectionFocus");
  var _showMonth = dart.privateName(calendar_date_picker, "_showMonth");
  var _handleDateSelected = dart.privateName(calendar_date_picker, "_handleDateSelected");
  var _focusableDayForMonth = dart.privateName(calendar_date_picker, "_focusableDayForMonth");
  var _handleMonthPageChanged = dart.privateName(calendar_date_picker, "_handleMonthPageChanged");
  var _isSelectable = dart.privateName(calendar_date_picker, "_isSelectable");
  var _isDisplayingLastMonth = dart.privateName(calendar_date_picker, "_isDisplayingLastMonth");
  var _handleNextMonth = dart.privateName(calendar_date_picker, "_handleNextMonth");
  var _isDisplayingFirstMonth = dart.privateName(calendar_date_picker, "_isDisplayingFirstMonth");
  var _handlePreviousMonth = dart.privateName(calendar_date_picker, "_handlePreviousMonth");
  var _handleGridFocusChange = dart.privateName(calendar_date_picker, "_handleGridFocusChange");
  var _nextDateInDirection = dart.privateName(calendar_date_picker, "_nextDateInDirection");
  var _dayDirectionOffset = dart.privateName(calendar_date_picker, "_dayDirectionOffset");
  var _buildItems = dart.privateName(calendar_date_picker, "_buildItems");
  var Spacer_flex = dart.privateName(spacer, "Spacer.flex");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  calendar_date_picker._MonthPickerState = class _MonthPickerState extends framework.State$(calendar_date_picker._MonthPicker) {
    get [_currentMonth]() {
      let t7;
      return dart.test(this[___MonthPickerState__currentMonth_isSet]) ? (t7 = this[___MonthPickerState__currentMonth], t7) : dart.throw(new _internal.LateError.fieldNI("_currentMonth"));
    }
    set [_currentMonth](t7) {
      if (t7 == null) dart.nullFailed(I[0], 492, 17, "null");
      this[___MonthPickerState__currentMonth_isSet] = true;
      this[___MonthPickerState__currentMonth] = t7;
    }
    get [_nextMonthDate]() {
      let t8;
      return dart.test(this[___MonthPickerState__nextMonthDate_isSet]) ? (t8 = this[___MonthPickerState__nextMonthDate], t8) : dart.throw(new _internal.LateError.fieldNI("_nextMonthDate"));
    }
    set [_nextMonthDate](t8) {
      if (t8 == null) dart.nullFailed(I[0], 493, 17, "null");
      this[___MonthPickerState__nextMonthDate_isSet] = true;
      this[___MonthPickerState__nextMonthDate] = t8;
    }
    get [_previousMonthDate]() {
      let t9;
      return dart.test(this[___MonthPickerState__previousMonthDate_isSet]) ? (t9 = this[___MonthPickerState__previousMonthDate], t9) : dart.throw(new _internal.LateError.fieldNI("_previousMonthDate"));
    }
    set [_previousMonthDate](t9) {
      if (t9 == null) dart.nullFailed(I[0], 494, 17, "null");
      this[___MonthPickerState__previousMonthDate_isSet] = true;
      this[___MonthPickerState__previousMonthDate] = t9;
    }
    get [_pageController]() {
      let t10;
      return dart.test(this[___MonthPickerState__pageController_isSet]) ? (t10 = this[___MonthPickerState__pageController], t10) : dart.throw(new _internal.LateError.fieldNI("_pageController"));
    }
    set [_pageController](t10) {
      if (t10 == null) dart.nullFailed(I[0], 495, 23, "null");
      this[___MonthPickerState__pageController_isSet] = true;
      this[___MonthPickerState__pageController] = t10;
    }
    get [_localizations]() {
      let t11;
      return dart.test(this[___MonthPickerState__localizations_isSet]) ? (t11 = this[___MonthPickerState__localizations], t11) : dart.throw(new _internal.LateError.fieldNI("_localizations"));
    }
    set [_localizations](t11) {
      if (t11 == null) dart.nullFailed(I[0], 496, 30, "null");
      this[___MonthPickerState__localizations_isSet] = true;
      this[___MonthPickerState__localizations] = t11;
    }
    get [_textDirection]() {
      let t12;
      return dart.test(this[___MonthPickerState__textDirection_isSet]) ? (t12 = this[___MonthPickerState__textDirection], t12) : dart.throw(new _internal.LateError.fieldNI("_textDirection"));
    }
    set [_textDirection](t12) {
      if (t12 == null) dart.nullFailed(I[0], 497, 22, "null");
      this[___MonthPickerState__textDirection_isSet] = true;
      this[___MonthPickerState__textDirection] = t12;
    }
    get [_dayGridFocus]() {
      let t13;
      return dart.test(this[___MonthPickerState__dayGridFocus_isSet]) ? (t13 = this[___MonthPickerState__dayGridFocus], t13) : dart.throw(new _internal.LateError.fieldNI("_dayGridFocus"));
    }
    set [_dayGridFocus](t13) {
      if (t13 == null) dart.nullFailed(I[0], 500, 18, "null");
      this[___MonthPickerState__dayGridFocus_isSet] = true;
      this[___MonthPickerState__dayGridFocus] = t13;
    }
    initState() {
      super.initState();
      this[_currentMonth] = this.widget.initialMonth;
      this[_previousMonthDate] = date$.DateUtils.addMonthsToMonthDate(this[_currentMonth], -1);
      this[_nextMonthDate] = date$.DateUtils.addMonthsToMonthDate(this[_currentMonth], 1);
      this[_pageController] = new page_view.PageController.new({initialPage: date$.DateUtils.monthDelta(this.widget.firstDate, this[_currentMonth])});
      this[_shortcutMap] = new (T.LinkedMapOfLogicalKeySet$Intent()).from([new shortcuts.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowLeft), C[100] || CT.C100, new shortcuts.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowRight), C[102] || CT.C102, new shortcuts.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowDown), C[104] || CT.C104, new shortcuts.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowUp), C[106] || CT.C106]);
      this[_actionMap] = new (T.LinkedMapOfType$ActionOfIntent()).from([dart.wrapType(focus_traversal.NextFocusIntent), new (T.CallbackActionOfNextFocusIntent()).new({onInvoke: dart.bind(this, _handleGridNextFocus)}), dart.wrapType(focus_traversal.PreviousFocusIntent), new (T.CallbackActionOfPreviousFocusIntent()).new({onInvoke: dart.bind(this, _handleGridPreviousFocus)}), dart.wrapType(focus_traversal.DirectionalFocusIntent), new (T.CallbackActionOfDirectionalFocusIntent()).new({onInvoke: dart.bind(this, _handleDirectionFocus)})]);
      this[_dayGridFocus] = new focus_manager.FocusNode.new({debugLabel: "Day Grid"});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_localizations] = material_localizations.MaterialLocalizations.of(this.context);
      this[_textDirection] = basic.Directionality.of(this.context);
    }
    didUpdateWidget(oldWidget) {
      calendar_date_picker._MonthPicker.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[0], 532, 37, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.initialMonth, oldWidget.initialMonth) && !dart.equals(this.widget.initialMonth, this[_currentMonth])) {
        dart.nullCheck(binding.WidgetsBinding.instance).addPostFrameCallback(dart.fn(timeStamp => {
          if (timeStamp == null) dart.nullFailed(I[0], 537, 19, "timeStamp");
          return this[_showMonth](this.widget.initialMonth, {jump: true});
        }, T.DurationTovoid()));
      }
    }
    dispose() {
      this[_pageController].dispose();
      this[_dayGridFocus].dispose();
      super.dispose();
    }
    [_handleDateSelected](selectedDate) {
      let t15, t14;
      if (selectedDate == null) dart.nullFailed(I[0], 549, 37, "selectedDate");
      this[_focusedDay] = selectedDate;
      t14 = this.widget;
      t15 = selectedDate;
      t14.onChanged(t15);
    }
    [_handleMonthPageChanged](monthPage) {
      if (monthPage == null) dart.nullFailed(I[0], 554, 36, "monthPage");
      this.setState(dart.fn(() => {
        let t15, t14;
        let monthDate = date$.DateUtils.addMonthsToMonthDate(this.widget.firstDate, monthPage);
        if (!dart.test(date$.DateUtils.isSameMonth(this[_currentMonth], monthDate))) {
          this[_currentMonth] = new core.DateTime.new(monthDate.year, monthDate.month);
          this[_previousMonthDate] = date$.DateUtils.addMonthsToMonthDate(this[_currentMonth], -1);
          this[_nextMonthDate] = date$.DateUtils.addMonthsToMonthDate(this[_currentMonth], 1);
          t14 = this.widget;
          t15 = this[_currentMonth];
          t14.onDisplayedMonthChanged(t15);
          if (this[_focusedDay] != null && !dart.test(date$.DateUtils.isSameMonth(this[_focusedDay], this[_currentMonth]))) {
            this[_focusedDay] = this[_focusableDayForMonth](this[_currentMonth], dart.nullCheck(this[_focusedDay]).day);
          }
        }
      }, T.VoidTovoid()));
    }
    [_focusableDayForMonth](month, preferredDay) {
      if (month == null) dart.nullFailed(I[0], 577, 44, "month");
      if (preferredDay == null) dart.nullFailed(I[0], 577, 55, "preferredDay");
      let daysInMonth = date$.DateUtils.getDaysInMonth(month.year, month.month);
      if (dart.notNull(preferredDay) <= dart.notNull(daysInMonth)) {
        let newFocus = new core.DateTime.new(month.year, month.month, preferredDay);
        if (dart.test(this[_isSelectable](newFocus))) return newFocus;
      }
      for (let day = 1; day <= dart.notNull(daysInMonth); day = day + 1) {
        let newFocus = new core.DateTime.new(month.year, month.month, day);
        if (dart.test(this[_isSelectable](newFocus))) return newFocus;
      }
      return null;
    }
    [_handleNextMonth]() {
      if (!dart.test(this[_isDisplayingLastMonth])) {
        semantics_service.SemanticsService.announce(this[_localizations].formatMonthYear(this[_nextMonthDate]), this[_textDirection]);
        this[_pageController].nextPage({duration: calendar_date_picker._monthScrollDuration, curve: curves.Curves.ease});
      }
    }
    [_handlePreviousMonth]() {
      if (!dart.test(this[_isDisplayingFirstMonth])) {
        semantics_service.SemanticsService.announce(this[_localizations].formatMonthYear(this[_previousMonthDate]), this[_textDirection]);
        this[_pageController].previousPage({duration: calendar_date_picker._monthScrollDuration, curve: curves.Curves.ease});
      }
    }
    [_showMonth](month, opts) {
      if (month == null) dart.nullFailed(I[0], 625, 28, "month");
      let jump = opts && 'jump' in opts ? opts.jump : false;
      if (jump == null) dart.nullFailed(I[0], 625, 42, "jump");
      let monthPage = date$.DateUtils.monthDelta(this.widget.firstDate, month);
      if (dart.test(jump)) {
        this[_pageController].jumpToPage(monthPage);
      } else {
        this[_pageController].animateToPage(monthPage, {duration: calendar_date_picker._monthScrollDuration, curve: curves.Curves.ease});
      }
    }
    get [_isDisplayingFirstMonth]() {
      return !dart.test(this[_currentMonth].isAfter(new core.DateTime.new(this.widget.firstDate.year, this.widget.firstDate.month)));
    }
    get [_isDisplayingLastMonth]() {
      return !dart.test(this[_currentMonth].isBefore(new core.DateTime.new(this.widget.lastDate.year, this.widget.lastDate.month)));
    }
    [_handleGridFocusChange](focused) {
      if (focused == null) dart.nullFailed(I[0], 653, 36, "focused");
      this.setState(dart.fn(() => {
        if (dart.test(focused) && this[_focusedDay] == null) {
          if (dart.test(date$.DateUtils.isSameMonth(this.widget.selectedDate, this[_currentMonth]))) {
            this[_focusedDay] = this.widget.selectedDate;
          } else if (dart.test(date$.DateUtils.isSameMonth(this.widget.currentDate, this[_currentMonth]))) {
            this[_focusedDay] = this[_focusableDayForMonth](this[_currentMonth], this.widget.currentDate.day);
          } else {
            this[_focusedDay] = this[_focusableDayForMonth](this[_currentMonth], 1);
          }
        }
      }, T.VoidTovoid()));
    }
    [_handleGridNextFocus](intent) {
      if (intent == null) dart.nullFailed(I[0], 668, 45, "intent");
      this[_dayGridFocus].requestFocus();
      this[_dayGridFocus].nextFocus();
    }
    [_handleGridPreviousFocus](intent) {
      if (intent == null) dart.nullFailed(I[0], 674, 53, "intent");
      this[_dayGridFocus].requestFocus();
      this[_dayGridFocus].previousFocus();
    }
    [_handleDirectionFocus](intent) {
      if (intent == null) dart.nullFailed(I[0], 688, 53, "intent");
      if (!(this[_focusedDay] != null)) dart.assertFailed(null, I[0], 689, 12, "_focusedDay != null");
      this.setState(dart.fn(() => {
        let nextDate = this[_nextDateInDirection](dart.nullCheck(this[_focusedDay]), intent.direction);
        if (nextDate != null) {
          this[_focusedDay] = nextDate;
          if (!dart.test(date$.DateUtils.isSameMonth(this[_focusedDay], this[_currentMonth]))) {
            this[_showMonth](dart.nullCheck(this[_focusedDay]));
          }
        }
      }, T.VoidTovoid()));
    }
    [_dayDirectionOffset](traversalDirection, textDirection) {
      if (traversalDirection == null) dart.nullFailed(I[0], 708, 46, "traversalDirection");
      if (textDirection == null) dart.nullFailed(I[0], 708, 80, "textDirection");
      if (textDirection == ui.TextDirection.rtl) {
        if (traversalDirection == focus_traversal.TraversalDirection.left)
          traversalDirection = focus_traversal.TraversalDirection.right;
        else if (traversalDirection == focus_traversal.TraversalDirection.right) traversalDirection = focus_traversal.TraversalDirection.left;
      }
      return dart.nullCheck(calendar_date_picker._MonthPickerState._directionOffset[$_get](traversalDirection));
    }
    [_nextDateInDirection](date, direction) {
      if (date == null) dart.nullFailed(I[0], 719, 43, "date");
      if (direction == null) dart.nullFailed(I[0], 719, 68, "direction");
      let textDirection = basic.Directionality.of(this.context);
      let nextDate = date$.DateUtils.addDaysToDate(date, this[_dayDirectionOffset](direction, textDirection));
      while (!dart.test(nextDate.isBefore(this.widget.firstDate)) && !dart.test(nextDate.isAfter(this.widget.lastDate))) {
        if (dart.test(this[_isSelectable](nextDate))) {
          return nextDate;
        }
        nextDate = date$.DateUtils.addDaysToDate(nextDate, this[_dayDirectionOffset](direction, textDirection));
      }
      return null;
    }
    [_isSelectable](date) {
      if (date == null) dart.nullFailed(I[0], 731, 31, "date");
      return this.widget.selectableDayPredicate == null || dart.test(dart.nullCheck(this.widget.selectableDayPredicate)(date));
    }
    [_buildItems](context, index) {
      if (context == null) dart.nullFailed(I[0], 735, 35, "context");
      if (index == null) dart.nullFailed(I[0], 735, 48, "index");
      let month = date$.DateUtils.addMonthsToMonthDate(this.widget.firstDate, index);
      return new calendar_date_picker._DayPicker.new({key: new (T.ValueKeyOfDateTime()).new(month), selectedDate: this.widget.selectedDate, currentDate: this.widget.currentDate, onChanged: dart.bind(this, _handleDateSelected), firstDate: this.widget.firstDate, lastDate: this.widget.lastDate, displayedMonth: month, selectableDayPredicate: this.widget.selectableDayPredicate, $creationLocationd_0dea112b090073317d4: C[108] || CT.C108});
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 750, 29, "context");
      let previousTooltipText = dart.str(this[_localizations].previousMonthTooltip) + " " + dart.str(this[_localizations].formatMonthYear(this[_previousMonthDate]));
      let nextTooltipText = dart.str(this[_localizations].nextMonthTooltip) + " " + dart.str(this[_localizations].formatMonthYear(this[_nextMonthDate]));
      let controlColor = theme.Theme.of(context).colorScheme.onSurface.withOpacity(0.6);
      return new basic.Semantics.new({child: new basic.Column.new({children: T.JSArrayOfWidget().of([new container.Container.new({padding: C[46] || CT.C46, height: 52, child: new basic.Row.new({children: T.JSArrayOfWidget().of([C[118] || CT.C118, new icon_button.IconButton.new({icon: C[121] || CT.C121, color: controlColor, tooltip: dart.test(this[_isDisplayingFirstMonth]) ? null : previousTooltipText, onPressed: dart.test(this[_isDisplayingFirstMonth]) ? null : dart.bind(this, _handlePreviousMonth), $creationLocationd_0dea112b090073317d4: C[126] || CT.C126}), new icon_button.IconButton.new({icon: C[132] || CT.C132, color: controlColor, tooltip: dart.test(this[_isDisplayingLastMonth]) ? null : nextTooltipText, onPressed: dart.test(this[_isDisplayingLastMonth]) ? null : dart.bind(this, _handleNextMonth), $creationLocationd_0dea112b090073317d4: C[137] || CT.C137})]), $creationLocationd_0dea112b090073317d4: C[143] || CT.C143}), $creationLocationd_0dea112b090073317d4: C[146] || CT.C146}), new basic.Expanded.new({child: new actions.FocusableActionDetector.new({shortcuts: this[_shortcutMap], actions: this[_actionMap], focusNode: this[_dayGridFocus], onFocusChange: dart.bind(this, _handleGridFocusChange), child: new calendar_date_picker._FocusedDate.new({date: dart.test(this[_dayGridFocus].hasFocus) ? this[_focusedDay] : null, child: new page_view.PageView.builder({key: this[_pageViewKey], controller: this[_pageController], itemBuilder: dart.bind(this, _buildItems), itemCount: dart.notNull(date$.DateUtils.monthDelta(this.widget.firstDate, this.widget.lastDate)) + 1, scrollDirection: basic_types.Axis.horizontal, onPageChanged: dart.bind(this, _handleMonthPageChanged), $creationLocationd_0dea112b090073317d4: C[151] || CT.C151}), $creationLocationd_0dea112b090073317d4: C[159] || CT.C159}), $creationLocationd_0dea112b090073317d4: C[163] || CT.C163}), $creationLocationd_0dea112b090073317d4: C[170] || CT.C170})]), $creationLocationd_0dea112b090073317d4: C[173] || CT.C173}), $creationLocationd_0dea112b090073317d4: C[176] || CT.C176});
    }
  };
  (calendar_date_picker._MonthPickerState.new = function() {
    this[_pageViewKey] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[___MonthPickerState__currentMonth] = null;
    this[___MonthPickerState__currentMonth_isSet] = false;
    this[___MonthPickerState__nextMonthDate] = null;
    this[___MonthPickerState__nextMonthDate_isSet] = false;
    this[___MonthPickerState__previousMonthDate] = null;
    this[___MonthPickerState__previousMonthDate_isSet] = false;
    this[___MonthPickerState__pageController] = null;
    this[___MonthPickerState__pageController_isSet] = false;
    this[___MonthPickerState__localizations] = null;
    this[___MonthPickerState__localizations_isSet] = false;
    this[___MonthPickerState__textDirection] = null;
    this[___MonthPickerState__textDirection_isSet] = false;
    this[_shortcutMap] = null;
    this[_actionMap] = null;
    this[___MonthPickerState__dayGridFocus] = null;
    this[___MonthPickerState__dayGridFocus_isSet] = false;
    this[_focusedDay] = null;
    calendar_date_picker._MonthPickerState.__proto__.new.call(this);
    ;
  }).prototype = calendar_date_picker._MonthPickerState.prototype;
  dart.addTypeTests(calendar_date_picker._MonthPickerState);
  dart.addTypeCaches(calendar_date_picker._MonthPickerState);
  dart.setMethodSignature(calendar_date_picker._MonthPickerState, () => ({
    __proto__: dart.getMethods(calendar_date_picker._MonthPickerState.__proto__),
    [_handleDateSelected]: dart.fnType(dart.void, [core.DateTime]),
    [_handleMonthPageChanged]: dart.fnType(dart.void, [core.int]),
    [_focusableDayForMonth]: dart.fnType(dart.nullable(core.DateTime), [core.DateTime, core.int]),
    [_handleNextMonth]: dart.fnType(dart.void, []),
    [_handlePreviousMonth]: dart.fnType(dart.void, []),
    [_showMonth]: dart.fnType(dart.void, [core.DateTime], {jump: core.bool}, {}),
    [_handleGridFocusChange]: dart.fnType(dart.void, [core.bool]),
    [_handleGridNextFocus]: dart.fnType(dart.void, [focus_traversal.NextFocusIntent]),
    [_handleGridPreviousFocus]: dart.fnType(dart.void, [focus_traversal.PreviousFocusIntent]),
    [_handleDirectionFocus]: dart.fnType(dart.void, [focus_traversal.DirectionalFocusIntent]),
    [_dayDirectionOffset]: dart.fnType(core.int, [focus_traversal.TraversalDirection, ui.TextDirection]),
    [_nextDateInDirection]: dart.fnType(dart.nullable(core.DateTime), [core.DateTime, focus_traversal.TraversalDirection]),
    [_isSelectable]: dart.fnType(core.bool, [core.DateTime]),
    [_buildItems]: dart.fnType(framework.Widget, [framework.BuildContext, core.int]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(calendar_date_picker._MonthPickerState, () => ({
    __proto__: dart.getGetters(calendar_date_picker._MonthPickerState.__proto__),
    [_currentMonth]: core.DateTime,
    [_nextMonthDate]: core.DateTime,
    [_previousMonthDate]: core.DateTime,
    [_pageController]: page_view.PageController,
    [_localizations]: material_localizations.MaterialLocalizations,
    [_textDirection]: ui.TextDirection,
    [_dayGridFocus]: focus_manager.FocusNode,
    [_isDisplayingFirstMonth]: core.bool,
    [_isDisplayingLastMonth]: core.bool
  }));
  dart.setSetterSignature(calendar_date_picker._MonthPickerState, () => ({
    __proto__: dart.getSetters(calendar_date_picker._MonthPickerState.__proto__),
    [_currentMonth]: core.DateTime,
    [_nextMonthDate]: core.DateTime,
    [_previousMonthDate]: core.DateTime,
    [_pageController]: page_view.PageController,
    [_localizations]: material_localizations.MaterialLocalizations,
    [_textDirection]: ui.TextDirection,
    [_dayGridFocus]: focus_manager.FocusNode
  }));
  dart.setLibraryUri(calendar_date_picker._MonthPickerState, I[1]);
  dart.setFieldSignature(calendar_date_picker._MonthPickerState, () => ({
    __proto__: dart.getFields(calendar_date_picker._MonthPickerState.__proto__),
    [_pageViewKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [___MonthPickerState__currentMonth]: dart.fieldType(dart.nullable(core.DateTime)),
    [___MonthPickerState__currentMonth_isSet]: dart.fieldType(core.bool),
    [___MonthPickerState__nextMonthDate]: dart.fieldType(dart.nullable(core.DateTime)),
    [___MonthPickerState__nextMonthDate_isSet]: dart.fieldType(core.bool),
    [___MonthPickerState__previousMonthDate]: dart.fieldType(dart.nullable(core.DateTime)),
    [___MonthPickerState__previousMonthDate_isSet]: dart.fieldType(core.bool),
    [___MonthPickerState__pageController]: dart.fieldType(dart.nullable(page_view.PageController)),
    [___MonthPickerState__pageController_isSet]: dart.fieldType(core.bool),
    [___MonthPickerState__localizations]: dart.fieldType(dart.nullable(material_localizations.MaterialLocalizations)),
    [___MonthPickerState__localizations_isSet]: dart.fieldType(core.bool),
    [___MonthPickerState__textDirection]: dart.fieldType(dart.nullable(ui.TextDirection)),
    [___MonthPickerState__textDirection_isSet]: dart.fieldType(core.bool),
    [_shortcutMap]: dart.fieldType(dart.nullable(core.Map$(shortcuts.LogicalKeySet, actions.Intent))),
    [_actionMap]: dart.fieldType(dart.nullable(core.Map$(core.Type, actions.Action$(actions.Intent)))),
    [___MonthPickerState__dayGridFocus]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
    [___MonthPickerState__dayGridFocus_isSet]: dart.fieldType(core.bool),
    [_focusedDay]: dart.fieldType(dart.nullable(core.DateTime))
  }));
  dart.defineLazy(calendar_date_picker._MonthPickerState, {
    /*calendar_date_picker._MonthPickerState._directionOffset*/get _directionOffset() {
      return C[179] || CT.C179;
    }
  }, false);
  var date$0 = dart.privateName(calendar_date_picker, "_FocusedDate.date");
  calendar_date_picker._FocusedDate = class _FocusedDate extends framework.InheritedWidget {
    get date() {
      return this[date$0];
    }
    set date(value) {
      super.date = value;
    }
    updateShouldNotify(oldWidget) {
      calendar_date_picker._FocusedDate.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[0], 818, 40, "oldWidget");
      return !dart.test(date$.DateUtils.isSameDay(this.date, oldWidget.date));
    }
    static of(context) {
      let t14;
      if (context == null) dart.nullFailed(I[0], 822, 36, "context");
      let focusedDate = context.dependOnInheritedWidgetOfExactType(calendar_date_picker._FocusedDate);
      t14 = focusedDate;
      return t14 == null ? null : t14.date;
    }
  };
  (calendar_date_picker._FocusedDate.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[0], 811, 21, "child");
    let date = opts && 'date' in opts ? opts.date : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[date$0] = date;
    calendar_date_picker._FocusedDate.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = calendar_date_picker._FocusedDate.prototype;
  dart.addTypeTests(calendar_date_picker._FocusedDate);
  dart.addTypeCaches(calendar_date_picker._FocusedDate);
  dart.setMethodSignature(calendar_date_picker._FocusedDate, () => ({
    __proto__: dart.getMethods(calendar_date_picker._FocusedDate.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(calendar_date_picker._FocusedDate, I[1]);
  dart.setFieldSignature(calendar_date_picker._FocusedDate, () => ({
    __proto__: dart.getFields(calendar_date_picker._FocusedDate.__proto__),
    date: dart.finalFieldType(dart.nullable(core.DateTime))
  }));
  calendar_date_picker._DayPicker = class _DayPicker extends framework.StatefulWidget {
    createState() {
      return new calendar_date_picker._DayPickerState.new();
    }
  };
  (calendar_date_picker._DayPicker.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let currentDate = opts && 'currentDate' in opts ? opts.currentDate : null;
    if (currentDate == null) dart.nullFailed(I[0], 836, 19, "currentDate");
    let displayedMonth = opts && 'displayedMonth' in opts ? opts.displayedMonth : null;
    if (displayedMonth == null) dart.nullFailed(I[0], 837, 19, "displayedMonth");
    let firstDate = opts && 'firstDate' in opts ? opts.firstDate : null;
    if (firstDate == null) dart.nullFailed(I[0], 838, 19, "firstDate");
    let lastDate = opts && 'lastDate' in opts ? opts.lastDate : null;
    if (lastDate == null) dart.nullFailed(I[0], 839, 19, "lastDate");
    let selectedDate = opts && 'selectedDate' in opts ? opts.selectedDate : null;
    if (selectedDate == null) dart.nullFailed(I[0], 840, 19, "selectedDate");
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    if (onChanged == null) dart.nullFailed(I[0], 841, 19, "onChanged");
    let selectableDayPredicate = opts && 'selectableDayPredicate' in opts ? opts.selectableDayPredicate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.currentDate = currentDate;
    this.displayedMonth = displayedMonth;
    this.firstDate = firstDate;
    this.lastDate = lastDate;
    this.selectedDate = selectedDate;
    this.onChanged = onChanged;
    this.selectableDayPredicate = selectableDayPredicate;
    if (!(currentDate != null)) dart.assertFailed(null, I[0], 843, 15, "currentDate != null");
    if (!(displayedMonth != null)) dart.assertFailed(null, I[0], 844, 15, "displayedMonth != null");
    if (!(firstDate != null)) dart.assertFailed(null, I[0], 845, 15, "firstDate != null");
    if (!(lastDate != null)) dart.assertFailed(null, I[0], 846, 15, "lastDate != null");
    if (!(selectedDate != null)) dart.assertFailed(null, I[0], 847, 15, "selectedDate != null");
    if (!(onChanged != null)) dart.assertFailed(null, I[0], 848, 15, "onChanged != null");
    if (!!dart.test(firstDate.isAfter(lastDate))) dart.assertFailed(null, I[0], 849, 15, "!firstDate.isAfter(lastDate)");
    if (!!dart.test(selectedDate.isBefore(firstDate))) dart.assertFailed(null, I[0], 850, 15, "!selectedDate.isBefore(firstDate)");
    if (!!dart.test(selectedDate.isAfter(lastDate))) dart.assertFailed(null, I[0], 851, 15, "!selectedDate.isAfter(lastDate)");
    calendar_date_picker._DayPicker.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = calendar_date_picker._DayPicker.prototype;
  dart.addTypeTests(calendar_date_picker._DayPicker);
  dart.addTypeCaches(calendar_date_picker._DayPicker);
  dart.setMethodSignature(calendar_date_picker._DayPicker, () => ({
    __proto__: dart.getMethods(calendar_date_picker._DayPicker.__proto__),
    createState: dart.fnType(calendar_date_picker._DayPickerState, [])
  }));
  dart.setLibraryUri(calendar_date_picker._DayPicker, I[1]);
  dart.setFieldSignature(calendar_date_picker._DayPicker, () => ({
    __proto__: dart.getFields(calendar_date_picker._DayPicker.__proto__),
    selectedDate: dart.finalFieldType(core.DateTime),
    currentDate: dart.finalFieldType(core.DateTime),
    onChanged: dart.finalFieldType(dart.fnType(dart.void, [core.DateTime])),
    firstDate: dart.finalFieldType(core.DateTime),
    lastDate: dart.finalFieldType(core.DateTime),
    displayedMonth: dart.finalFieldType(core.DateTime),
    selectableDayPredicate: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [core.DateTime])))
  }));
  var ___DayPickerState__dayFocusNodes = dart.privateName(calendar_date_picker, "_#_DayPickerState#_dayFocusNodes");
  var ___DayPickerState__dayFocusNodes_isSet = dart.privateName(calendar_date_picker, "_#_DayPickerState#_dayFocusNodes#isSet");
  var _dayFocusNodes = dart.privateName(calendar_date_picker, "_dayFocusNodes");
  var _dayHeaders = dart.privateName(calendar_date_picker, "_dayHeaders");
  var ScrollPhysics_parent = dart.privateName(scroll_physics, "ScrollPhysics.parent");
  calendar_date_picker._DayPickerState = class _DayPickerState extends framework.State$(calendar_date_picker._DayPicker) {
    get [_dayFocusNodes]() {
      let t14;
      return dart.test(this[___DayPickerState__dayFocusNodes_isSet]) ? (t14 = this[___DayPickerState__dayFocusNodes], t14) : dart.throw(new _internal.LateError.fieldNI("_dayFocusNodes"));
    }
    set [_dayFocusNodes](t14) {
      if (t14 == null) dart.nullFailed(I[0], 888, 24, "null");
      this[___DayPickerState__dayFocusNodes_isSet] = true;
      this[___DayPickerState__dayFocusNodes] = t14;
    }
    initState() {
      super.initState();
      let daysInMonth = date$.DateUtils.getDaysInMonth(this.widget.displayedMonth.year, this.widget.displayedMonth.month);
      this[_dayFocusNodes] = T.ListOfFocusNode().generate(daysInMonth, dart.fn(index => {
        if (index == null) dart.nullFailed(I[0], 896, 12, "index");
        return new focus_manager.FocusNode.new({skipTraversal: true, debugLabel: "Day " + dart.str(dart.notNull(index) + 1)});
      }, T.intToFocusNode()));
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      let focusedDate = calendar_date_picker._FocusedDate.of(this.context);
      if (focusedDate != null && dart.test(date$.DateUtils.isSameMonth(this.widget.displayedMonth, focusedDate))) {
        this[_dayFocusNodes][$_get](dart.notNull(focusedDate.day) - 1).requestFocus();
      }
    }
    dispose() {
      for (let node of this[_dayFocusNodes]) {
        node.dispose();
      }
      super.dispose();
    }
    [_dayHeaders](headerStyle, localizations) {
      if (localizations == null) dart.nullFailed(I[0], 936, 74, "localizations");
      let result = T.JSArrayOfWidget().of([]);
      for (let i = localizations.firstDayOfWeekIndex; true; i = (dart.notNull(i) + 1)[$modulo](7)) {
        let weekday = localizations.narrowWeekdays[$_get](i);
        result[$add](new basic.ExcludeSemantics.new({child: new basic.Center.new({child: new text.Text.new(weekday, {style: headerStyle, $creationLocationd_0dea112b090073317d4: C[180] || CT.C180}), $creationLocationd_0dea112b090073317d4: C[184] || CT.C184}), $creationLocationd_0dea112b090073317d4: C[187] || CT.C187}));
        if (i === (dart.notNull(localizations.firstDayOfWeekIndex) - 1)[$modulo](7)) break;
      }
      return result;
    }
    build(context) {
      let t15;
      if (context == null) dart.nullFailed(I[0], 950, 29, "context");
      let colorScheme = theme.Theme.of(context).colorScheme;
      let localizations = material_localizations.MaterialLocalizations.of(context);
      let textTheme = theme.Theme.of(context).textTheme;
      let headerStyle = (t15 = textTheme.caption, t15 == null ? null : t15.apply({color: colorScheme.onSurface.withOpacity(0.6)}));
      let dayStyle = dart.nullCheck(textTheme.caption);
      let enabledDayColor = colorScheme.onSurface.withOpacity(0.87);
      let disabledDayColor = colorScheme.onSurface.withOpacity(0.38);
      let selectedDayColor = colorScheme.onPrimary;
      let selectedDayBackground = colorScheme.primary;
      let todayColor = colorScheme.primary;
      let year = this.widget.displayedMonth.year;
      let month = this.widget.displayedMonth.month;
      let daysInMonth = date$.DateUtils.getDaysInMonth(year, month);
      let dayOffset = date$.DateUtils.firstDayOffset(year, month, localizations);
      let dayItems = this[_dayHeaders](headerStyle, localizations);
      let day = -dart.notNull(dayOffset);
      while (day < dart.notNull(daysInMonth)) {
        day = day + 1;
        if (day < 1) {
          dayItems[$add](new container.Container.new({$creationLocationd_0dea112b090073317d4: C[190] || CT.C190}));
        } else {
          let dayToBuild = new core.DateTime.new(year, month, day);
          let isDisabled = dart.test(dayToBuild.isAfter(this.widget.lastDate)) || dart.test(dayToBuild.isBefore(this.widget.firstDate)) || this.widget.selectableDayPredicate != null && !dart.test(dart.nullCheck(this.widget.selectableDayPredicate)(dayToBuild));
          let isSelectedDay = date$.DateUtils.isSameDay(this.widget.selectedDate, dayToBuild);
          let isToday = date$.DateUtils.isSameDay(this.widget.currentDate, dayToBuild);
          let decoration = null;
          let dayColor = enabledDayColor;
          if (dart.test(isSelectedDay)) {
            dayColor = selectedDayColor;
            decoration = new box_decoration.BoxDecoration.new({color: selectedDayBackground, shape: box_border.BoxShape.circle});
          } else if (isDisabled) {
            dayColor = disabledDayColor;
          } else if (dart.test(isToday)) {
            dayColor = todayColor;
            decoration = new box_decoration.BoxDecoration.new({border: box_border.Border.all({color: todayColor, width: 1.0}), shape: box_border.BoxShape.circle});
          }
          let dayWidget = new container.Container.new({decoration: decoration, child: new basic.Center.new({child: new text.Text.new(localizations.formatDecimal(day), {style: dayStyle.apply({color: dayColor}), $creationLocationd_0dea112b090073317d4: C[191] || CT.C191}), $creationLocationd_0dea112b090073317d4: C[195] || CT.C195}), $creationLocationd_0dea112b090073317d4: C[198] || CT.C198});
          if (isDisabled) {
            dayWidget = new basic.ExcludeSemantics.new({child: dayWidget, $creationLocationd_0dea112b090073317d4: C[202] || CT.C202});
          } else {
            dayWidget = new ink_well.InkResponse.new({focusNode: this[_dayFocusNodes][$_get](day - 1), onTap: dart.fn(() => {
                let t16, t15;
                t15 = this.widget;
                t16 = dayToBuild;
                return t15.onChanged(t16);
              }, T.VoidTovoid()), radius: 42 / 2 + 4, splashColor: selectedDayBackground.withOpacity(0.38), child: new basic.Semantics.new({label: dart.str(localizations.formatDecimal(day)) + ", " + dart.str(localizations.formatFullDate(dayToBuild)), selected: isSelectedDay, excludeSemantics: true, child: dayWidget, $creationLocationd_0dea112b090073317d4: C[205] || CT.C205}), $creationLocationd_0dea112b090073317d4: C[211] || CT.C211});
          }
          dayItems[$add](dayWidget);
        }
      }
      return new basic.Padding.new({padding: C[47] || CT.C47, child: new scroll_view.GridView.custom({physics: C[218] || CT.C218, gridDelegate: calendar_date_picker._dayPickerGridDelegate, childrenDelegate: new sliver.SliverChildListDelegate.new(dayItems, {addRepaintBoundaries: false}), $creationLocationd_0dea112b090073317d4: C[219] || CT.C219}), $creationLocationd_0dea112b090073317d4: C[224] || CT.C224});
    }
  };
  (calendar_date_picker._DayPickerState.new = function() {
    this[___DayPickerState__dayFocusNodes] = null;
    this[___DayPickerState__dayFocusNodes_isSet] = false;
    calendar_date_picker._DayPickerState.__proto__.new.call(this);
    ;
  }).prototype = calendar_date_picker._DayPickerState.prototype;
  dart.addTypeTests(calendar_date_picker._DayPickerState);
  dart.addTypeCaches(calendar_date_picker._DayPickerState);
  dart.setMethodSignature(calendar_date_picker._DayPickerState, () => ({
    __proto__: dart.getMethods(calendar_date_picker._DayPickerState.__proto__),
    [_dayHeaders]: dart.fnType(core.List$(framework.Widget), [dart.nullable(text_style.TextStyle), material_localizations.MaterialLocalizations]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(calendar_date_picker._DayPickerState, () => ({
    __proto__: dart.getGetters(calendar_date_picker._DayPickerState.__proto__),
    [_dayFocusNodes]: core.List$(focus_manager.FocusNode)
  }));
  dart.setSetterSignature(calendar_date_picker._DayPickerState, () => ({
    __proto__: dart.getSetters(calendar_date_picker._DayPickerState.__proto__),
    [_dayFocusNodes]: core.List$(focus_manager.FocusNode)
  }));
  dart.setLibraryUri(calendar_date_picker._DayPickerState, I[1]);
  dart.setFieldSignature(calendar_date_picker._DayPickerState, () => ({
    __proto__: dart.getFields(calendar_date_picker._DayPickerState.__proto__),
    [___DayPickerState__dayFocusNodes]: dart.fieldType(dart.nullable(core.List$(focus_manager.FocusNode))),
    [___DayPickerState__dayFocusNodes_isSet]: dart.fieldType(core.bool)
  }));
  calendar_date_picker._DayPickerGridDelegate = class _DayPickerGridDelegate extends sliver_grid.SliverGridDelegate {
    getLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[0], 1064, 48, "constraints");
      let tileWidth = dart.notNull(constraints.crossAxisExtent) / 7;
      let tileHeight = math.min(core.double, 42, dart.notNull(constraints.viewportMainAxisExtent) / (6 + 1));
      return new sliver_grid.SliverGridRegularTileLayout.new({childCrossAxisExtent: tileWidth, childMainAxisExtent: tileHeight, crossAxisCount: 7, crossAxisStride: tileWidth, mainAxisStride: tileHeight, reverseCrossAxis: basic_types.axisDirectionIsReversed(constraints.crossAxisDirection)});
    }
    shouldRelayout(oldDelegate) {
      calendar_date_picker._DayPickerGridDelegate.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[0], 1082, 46, "oldDelegate");
      return false;
    }
  };
  (calendar_date_picker._DayPickerGridDelegate.new = function() {
    calendar_date_picker._DayPickerGridDelegate.__proto__.new.call(this);
    ;
  }).prototype = calendar_date_picker._DayPickerGridDelegate.prototype;
  dart.addTypeTests(calendar_date_picker._DayPickerGridDelegate);
  dart.addTypeCaches(calendar_date_picker._DayPickerGridDelegate);
  dart.setMethodSignature(calendar_date_picker._DayPickerGridDelegate, () => ({
    __proto__: dart.getMethods(calendar_date_picker._DayPickerGridDelegate.__proto__),
    getLayout: dart.fnType(sliver_grid.SliverGridLayout, [sliver$.SliverConstraints]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(calendar_date_picker._DayPickerGridDelegate, I[1]);
  var currentDate$0 = dart.privateName(calendar_date_picker, "YearPicker.currentDate");
  var firstDate$0 = dart.privateName(calendar_date_picker, "YearPicker.firstDate");
  var lastDate$0 = dart.privateName(calendar_date_picker, "YearPicker.lastDate");
  var initialDate$0 = dart.privateName(calendar_date_picker, "YearPicker.initialDate");
  var selectedDate$ = dart.privateName(calendar_date_picker, "YearPicker.selectedDate");
  var onChanged$ = dart.privateName(calendar_date_picker, "YearPicker.onChanged");
  var dragStartBehavior$ = dart.privateName(calendar_date_picker, "YearPicker.dragStartBehavior");
  var _name$1 = dart.privateName(recognizer, "_name");
  calendar_date_picker.YearPicker = class YearPicker extends framework.StatefulWidget {
    get currentDate() {
      return this[currentDate$0];
    }
    set currentDate(value) {
      super.currentDate = value;
    }
    get firstDate() {
      return this[firstDate$0];
    }
    set firstDate(value) {
      super.firstDate = value;
    }
    get lastDate() {
      return this[lastDate$0];
    }
    set lastDate(value) {
      super.lastDate = value;
    }
    get initialDate() {
      return this[initialDate$0];
    }
    set initialDate(value) {
      super.initialDate = value;
    }
    get selectedDate() {
      return this[selectedDate$];
    }
    set selectedDate(value) {
      super.selectedDate = value;
    }
    get onChanged() {
      return this[onChanged$];
    }
    set onChanged(value) {
      super.onChanged = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    createState() {
      return new calendar_date_picker._YearPickerState.new();
    }
  };
  (calendar_date_picker.YearPicker.new = function(opts) {
    let t15, t15$;
    let key = opts && 'key' in opts ? opts.key : null;
    let currentDate = opts && 'currentDate' in opts ? opts.currentDate : null;
    let firstDate = opts && 'firstDate' in opts ? opts.firstDate : null;
    if (firstDate == null) dart.nullFailed(I[0], 1108, 19, "firstDate");
    let lastDate = opts && 'lastDate' in opts ? opts.lastDate : null;
    if (lastDate == null) dart.nullFailed(I[0], 1109, 19, "lastDate");
    let initialDate = opts && 'initialDate' in opts ? opts.initialDate : null;
    let selectedDate = opts && 'selectedDate' in opts ? opts.selectedDate : null;
    if (selectedDate == null) dart.nullFailed(I[0], 1111, 19, "selectedDate");
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    if (onChanged == null) dart.nullFailed(I[0], 1112, 19, "onChanged");
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[228] || CT.C228;
    if (dragStartBehavior == null) dart.nullFailed(I[0], 1113, 10, "dragStartBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[firstDate$0] = firstDate;
    this[lastDate$0] = lastDate;
    this[selectedDate$] = selectedDate;
    this[onChanged$] = onChanged;
    this[dragStartBehavior$] = dragStartBehavior;
    if (!(firstDate != null)) dart.assertFailed(null, I[0], 1114, 15, "firstDate != null");
    if (!(lastDate != null)) dart.assertFailed(null, I[0], 1115, 15, "lastDate != null");
    if (!(selectedDate != null)) dart.assertFailed(null, I[0], 1116, 15, "selectedDate != null");
    if (!(onChanged != null)) dart.assertFailed(null, I[0], 1117, 15, "onChanged != null");
    if (!!dart.test(firstDate.isAfter(lastDate))) dart.assertFailed(null, I[0], 1118, 15, "!firstDate.isAfter(lastDate)");
    this[currentDate$0] = date$.DateUtils.dateOnly((t15 = currentDate, t15 == null ? new core.DateTime.now() : t15));
    this[initialDate$0] = date$.DateUtils.dateOnly((t15$ = initialDate, t15$ == null ? selectedDate : t15$));
    calendar_date_picker.YearPicker.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = calendar_date_picker.YearPicker.prototype;
  dart.addTypeTests(calendar_date_picker.YearPicker);
  dart.addTypeCaches(calendar_date_picker.YearPicker);
  dart.setMethodSignature(calendar_date_picker.YearPicker, () => ({
    __proto__: dart.getMethods(calendar_date_picker.YearPicker.__proto__),
    createState: dart.fnType(calendar_date_picker._YearPickerState, [])
  }));
  dart.setLibraryUri(calendar_date_picker.YearPicker, I[1]);
  dart.setFieldSignature(calendar_date_picker.YearPicker, () => ({
    __proto__: dart.getFields(calendar_date_picker.YearPicker.__proto__),
    currentDate: dart.finalFieldType(core.DateTime),
    firstDate: dart.finalFieldType(core.DateTime),
    lastDate: dart.finalFieldType(core.DateTime),
    initialDate: dart.finalFieldType(core.DateTime),
    selectedDate: dart.finalFieldType(core.DateTime),
    onChanged: dart.finalFieldType(dart.fnType(dart.void, [core.DateTime])),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  var ___YearPickerState__scrollController = dart.privateName(calendar_date_picker, "_#_YearPickerState#_scrollController");
  var ___YearPickerState__scrollController_isSet = dart.privateName(calendar_date_picker, "_#_YearPickerState#_scrollController#isSet");
  var _scrollController = dart.privateName(calendar_date_picker, "_scrollController");
  var _scrollOffsetForYear = dart.privateName(calendar_date_picker, "_scrollOffsetForYear");
  var _itemCount = dart.privateName(calendar_date_picker, "_itemCount");
  var _buildYearItem = dart.privateName(calendar_date_picker, "_buildYearItem");
  var Divider_color = dart.privateName(divider, "Divider.color");
  var Divider_endIndent = dart.privateName(divider, "Divider.endIndent");
  var Divider_indent = dart.privateName(divider, "Divider.indent");
  var Divider_thickness = dart.privateName(divider, "Divider.thickness");
  var Divider_height = dart.privateName(divider, "Divider.height");
  calendar_date_picker._YearPickerState = class _YearPickerState extends framework.State$(calendar_date_picker.YearPicker) {
    get [_scrollController]() {
      let t15;
      return dart.test(this[___YearPickerState__scrollController_isSet]) ? (t15 = this[___YearPickerState__scrollController], t15) : dart.throw(new _internal.LateError.fieldNI("_scrollController"));
    }
    set [_scrollController](t15) {
      if (t15 == null) dart.nullFailed(I[0], 1153, 25, "null");
      this[___YearPickerState__scrollController_isSet] = true;
      this[___YearPickerState__scrollController] = t15;
    }
    initState() {
      super.initState();
      this[_scrollController] = new scroll_controller.ScrollController.new({initialScrollOffset: this[_scrollOffsetForYear](this.widget.selectedDate)});
    }
    didUpdateWidget(oldWidget) {
      calendar_date_picker.YearPicker.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[0], 1165, 35, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.selectedDate, oldWidget.selectedDate)) {
        this[_scrollController].jumpTo(this[_scrollOffsetForYear](this.widget.selectedDate));
      }
    }
    [_scrollOffsetForYear](date) {
      if (date == null) dart.nullFailed(I[0], 1172, 40, "date");
      let initialYearIndex = dart.notNull(date.year) - dart.notNull(this.widget.firstDate.year);
      let initialYearRow = (initialYearIndex / 3)[$truncate]();
      let centeredYearRow = initialYearRow - 2;
      return dart.notNull(this[_itemCount]) < 18 ? 0.0 : centeredYearRow * 52;
    }
    [_buildYearItem](context, index) {
      let t16;
      if (context == null) dart.nullFailed(I[0], 1180, 38, "context");
      if (index == null) dart.nullFailed(I[0], 1180, 51, "index");
      let colorScheme = theme.Theme.of(context).colorScheme;
      let textTheme = theme.Theme.of(context).textTheme;
      let offset = dart.notNull(this[_itemCount]) < 18 ? ((18 - dart.notNull(this[_itemCount])) / 2)[$truncate]() : 0;
      let year = dart.notNull(this.widget.firstDate.year) + dart.notNull(index) - offset;
      let isSelected = year === this.widget.selectedDate.year;
      let isCurrentYear = year === this.widget.currentDate.year;
      let isDisabled = year < dart.notNull(this.widget.firstDate.year) || year > dart.notNull(this.widget.lastDate.year);
      let textColor = null;
      if (isSelected) {
        textColor = colorScheme.onPrimary;
      } else if (isDisabled) {
        textColor = colorScheme.onSurface.withOpacity(0.38);
      } else if (isCurrentYear) {
        textColor = colorScheme.primary;
      } else {
        textColor = colorScheme.onSurface.withOpacity(0.87);
      }
      let itemStyle = (t16 = textTheme.bodyText1, t16 == null ? null : t16.apply({color: textColor}));
      let decoration = null;
      if (isSelected) {
        decoration = new box_decoration.BoxDecoration.new({color: colorScheme.primary, borderRadius: new border_radius.BorderRadius.circular(36 / 2), shape: box_border.BoxShape.rectangle});
      } else if (isCurrentYear && !isDisabled) {
        decoration = new box_decoration.BoxDecoration.new({border: box_border.Border.all({color: colorScheme.primary, width: 1.0}), borderRadius: new border_radius.BorderRadius.circular(36 / 2), shape: box_border.BoxShape.rectangle});
      }
      let yearItem = new basic.Center.new({child: new container.Container.new({decoration: decoration, height: 36, width: 72, child: new basic.Center.new({child: new basic.Semantics.new({selected: isSelected, child: new text.Text.new(year[$toString](), {style: itemStyle, $creationLocationd_0dea112b090073317d4: C[229] || CT.C229}), $creationLocationd_0dea112b090073317d4: C[233] || CT.C233}), $creationLocationd_0dea112b090073317d4: C[237] || CT.C237}), $creationLocationd_0dea112b090073317d4: C[240] || CT.C240}), $creationLocationd_0dea112b090073317d4: C[246] || CT.C246});
      if (isDisabled) {
        yearItem = new basic.ExcludeSemantics.new({child: yearItem, $creationLocationd_0dea112b090073317d4: C[249] || CT.C249});
      } else {
        yearItem = new ink_well.InkWell.new({key: new (T.ValueKeyOfint()).new(year), onTap: dart.fn(() => {
            let t17, t16;
            t16 = this.widget;
            t17 = new core.DateTime.new(year, this.widget.initialDate.month, 1);
            return t16.onChanged(t17);
          }, T.VoidTovoid()), child: yearItem, $creationLocationd_0dea112b090073317d4: C[252] || CT.C252});
      }
      return yearItem;
    }
    get [_itemCount]() {
      return dart.notNull(this.widget.lastDate.year) - dart.notNull(this.widget.firstDate.year) + 1;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 1257, 29, "context");
      if (!dart.test(debug$.debugCheckHasMaterial(context))) dart.assertFailed(null, I[0], 1258, 12, "debugCheckHasMaterial(context)");
      return new basic.Column.new({children: T.JSArrayOfWidget().of([C[257] || CT.C257, new basic.Expanded.new({child: new scroll_view.GridView.builder({controller: this[_scrollController], dragStartBehavior: this.widget.dragStartBehavior, gridDelegate: calendar_date_picker._yearPickerGridDelegate, itemBuilder: dart.bind(this, _buildYearItem), itemCount: math.max(core.int, this[_itemCount], 18), padding: C[259] || CT.C259, $creationLocationd_0dea112b090073317d4: C[260] || CT.C260}), $creationLocationd_0dea112b090073317d4: C[268] || CT.C268}), C[271] || CT.C271]), $creationLocationd_0dea112b090073317d4: C[273] || CT.C273});
    }
  };
  (calendar_date_picker._YearPickerState.new = function() {
    this[___YearPickerState__scrollController] = null;
    this[___YearPickerState__scrollController_isSet] = false;
    calendar_date_picker._YearPickerState.__proto__.new.call(this);
    ;
  }).prototype = calendar_date_picker._YearPickerState.prototype;
  dart.addTypeTests(calendar_date_picker._YearPickerState);
  dart.addTypeCaches(calendar_date_picker._YearPickerState);
  dart.setMethodSignature(calendar_date_picker._YearPickerState, () => ({
    __proto__: dart.getMethods(calendar_date_picker._YearPickerState.__proto__),
    [_scrollOffsetForYear]: dart.fnType(core.double, [core.DateTime]),
    [_buildYearItem]: dart.fnType(framework.Widget, [framework.BuildContext, core.int]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(calendar_date_picker._YearPickerState, () => ({
    __proto__: dart.getGetters(calendar_date_picker._YearPickerState.__proto__),
    [_scrollController]: scroll_controller.ScrollController,
    [_itemCount]: core.int
  }));
  dart.setSetterSignature(calendar_date_picker._YearPickerState, () => ({
    __proto__: dart.getSetters(calendar_date_picker._YearPickerState.__proto__),
    [_scrollController]: scroll_controller.ScrollController
  }));
  dart.setLibraryUri(calendar_date_picker._YearPickerState, I[1]);
  dart.setFieldSignature(calendar_date_picker._YearPickerState, () => ({
    __proto__: dart.getFields(calendar_date_picker._YearPickerState.__proto__),
    [___YearPickerState__scrollController]: dart.fieldType(dart.nullable(scroll_controller.ScrollController)),
    [___YearPickerState__scrollController_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(calendar_date_picker._YearPickerState, {
    /*calendar_date_picker._YearPickerState.minYears*/get minYears() {
      return 18;
    }
  }, false);
  calendar_date_picker._YearPickerGridDelegate = class _YearPickerGridDelegate extends sliver_grid.SliverGridDelegate {
    getLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[0], 1282, 48, "constraints");
      let tileWidth = (dart.notNull(constraints.crossAxisExtent) - (3 - 1) * 8) / 3;
      return new sliver_grid.SliverGridRegularTileLayout.new({childCrossAxisExtent: tileWidth, childMainAxisExtent: 52, crossAxisCount: 3, crossAxisStride: tileWidth + 8, mainAxisStride: 52, reverseCrossAxis: basic_types.axisDirectionIsReversed(constraints.crossAxisDirection)});
    }
    shouldRelayout(oldDelegate) {
      calendar_date_picker._YearPickerGridDelegate.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[0], 1296, 47, "oldDelegate");
      return false;
    }
  };
  (calendar_date_picker._YearPickerGridDelegate.new = function() {
    calendar_date_picker._YearPickerGridDelegate.__proto__.new.call(this);
    ;
  }).prototype = calendar_date_picker._YearPickerGridDelegate.prototype;
  dart.addTypeTests(calendar_date_picker._YearPickerGridDelegate);
  dart.addTypeCaches(calendar_date_picker._YearPickerGridDelegate);
  dart.setMethodSignature(calendar_date_picker._YearPickerGridDelegate, () => ({
    __proto__: dart.getMethods(calendar_date_picker._YearPickerGridDelegate.__proto__),
    getLayout: dart.fnType(sliver_grid.SliverGridLayout, [sliver$.SliverConstraints]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(calendar_date_picker._YearPickerGridDelegate, I[1]);
  dart.defineLazy(calendar_date_picker, {
    /*calendar_date_picker._monthScrollDuration*/get _monthScrollDuration() {
      return C[45] || CT.C45;
    },
    /*calendar_date_picker._dayPickerRowHeight*/get _dayPickerRowHeight() {
      return 42;
    },
    /*calendar_date_picker._maxDayPickerRowCount*/get _maxDayPickerRowCount() {
      return 6;
    },
    /*calendar_date_picker._maxDayPickerHeight*/get _maxDayPickerHeight() {
      return 294;
    },
    /*calendar_date_picker._monthPickerHorizontalPadding*/get _monthPickerHorizontalPadding() {
      return 8;
    },
    /*calendar_date_picker._yearPickerColumnCount*/get _yearPickerColumnCount() {
      return 3;
    },
    /*calendar_date_picker._yearPickerPadding*/get _yearPickerPadding() {
      return 16;
    },
    /*calendar_date_picker._yearPickerRowHeight*/get _yearPickerRowHeight() {
      return 52;
    },
    /*calendar_date_picker._yearPickerRowSpacing*/get _yearPickerRowSpacing() {
      return 8;
    },
    /*calendar_date_picker._subHeaderHeight*/get _subHeaderHeight() {
      return 52;
    },
    /*calendar_date_picker._monthNavButtonsWidth*/get _monthNavButtonsWidth() {
      return 108;
    },
    /*calendar_date_picker._dayPickerGridDelegate*/get _dayPickerGridDelegate() {
      return C[276] || CT.C276;
    },
    /*calendar_date_picker._yearPickerGridDelegate*/get _yearPickerGridDelegate() {
      return C[277] || CT.C277;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/material/calendar_date_picker.dart", {
    "package:flutter/src/material/calendar_date_picker.dart": calendar_date_picker
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["calendar_date_picker.dart"],"names":[],"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","file":"../../../../../../../../../packages/flutter/src/material/calendar_date_picker.dart.lib.js"}');
  // Exports:
  return {
    src__material__calendar_date_picker: calendar_date_picker
  };
}));

//# sourceMappingURL=calendar_date_picker.dart.lib.js.map
