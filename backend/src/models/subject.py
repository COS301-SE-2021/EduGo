# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Subject(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, subject_id: int=None, subject_description: str=None, subject_title: str=None):  # noqa: E501
        """Subject - a model defined in Swagger

        :param subject_id: The subject_id of this Subject.  # noqa: E501
        :type subject_id: int
        :param subject_description: The subject_description of this Subject.  # noqa: E501
        :type subject_description: str
        :param subject_title: The subject_title of this Subject.  # noqa: E501
        :type subject_title: str
        """
        self.swagger_types = {
            'subject_id': int,
            'subject_description': str,
            'subject_title': str
        }

        self.attribute_map = {
            'subject_id': 'subject_id',
            'subject_description': 'subject_description',
            'subject_title': 'subject_title'
        }
        self._subject_id = subject_id
        self._subject_description = subject_description
        self._subject_title = subject_title

    @classmethod
    def from_dict(cls, dikt) -> 'Subject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Subject of this Subject.  # noqa: E501
        :rtype: Subject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subject_id(self) -> int:
        """Gets the subject_id of this Subject.


        :return: The subject_id of this Subject.
        :rtype: int
        """
        return self._subject_id

    @subject_id.setter
    def subject_id(self, subject_id: int):
        """Sets the subject_id of this Subject.


        :param subject_id: The subject_id of this Subject.
        :type subject_id: int
        """

        self._subject_id = subject_id

    @property
    def subject_description(self) -> str:
        """Gets the subject_description of this Subject.


        :return: The subject_description of this Subject.
        :rtype: str
        """
        return self._subject_description

    @subject_description.setter
    def subject_description(self, subject_description: str):
        """Sets the subject_description of this Subject.


        :param subject_description: The subject_description of this Subject.
        :type subject_description: str
        """

        self._subject_description = subject_description

    @property
    def subject_title(self) -> str:
        """Gets the subject_title of this Subject.


        :return: The subject_title of this Subject.
        :rtype: str
        """
        return self._subject_title

    @subject_title.setter
    def subject_title(self, subject_title: str):
        """Sets the subject_title of this Subject.


        :param subject_title: The subject_title of this Subject.
        :type subject_title: str
        """

        self._subject_title = subject_title
